{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import React,{useEffect}from'react';import IconButton from\"@material-ui/core/IconButton\";import{Badge}from\"@material-ui/core\";import ShoppingCartIcon from\"@material-ui/icons/ShoppingCart\";import FavoriteBorderIcon from\"@material-ui/icons/FavoriteBorder\";import MenuIcon from\"@material-ui/icons/Menu\";import{getProductsInCart,getUserId}from'../../reducks/users/selectors';import{useDispatch,useSelector}from'react-redux';import{db}from'../../firebase/index';import{fetchProductsInCart}from'../../reducks/users/operations';import{push}from'connected-react-router';var HeaderMenu=function HeaderMenu(props){var dispatch=useDispatch();var selector=useSelector(function(state){return state;});var userId=getUserId(selector);var productsInCart=getProductsInCart(selector);// Listen products in user's cart\nuseEffect(function(){var unsubscribe=db.collection('users').doc(userId).collection('cart').onSnapshot(function(snapshots){snapshots.docChanges().forEach(function(change){var product=change.doc.data();var changeType=change.type;switch(changeType){case'added':productsInCart.push(product);break;case'modified':var index=productsInCart.findIndex(function(product){return product.cartId===change.doc.id;});productsInCart[index]=product;break;case'removed':productsInCart=productsInCart.filter(function(product){return product.cartId!==change.doc.id;});break;default:break;}});dispatch(fetchProductsInCart(productsInCart));});return function(){return unsubscribe();};},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(IconButton,{onClick:function onClick(){return dispatch(push('/cart'));},children:/*#__PURE__*/_jsx(Badge,{badgeContent:productsInCart.length,color:\"secondary\",children:/*#__PURE__*/_jsx(ShoppingCartIcon,{})})}),/*#__PURE__*/_jsx(IconButton,{children:/*#__PURE__*/_jsx(FavoriteBorderIcon,{})}),/*#__PURE__*/_jsx(IconButton,{onClick:function onClick(e){return props.handleDrawerToggle(e,true);},children:/*#__PURE__*/_jsx(MenuIcon,{})})]});};export default HeaderMenu;","map":{"version":3,"sources":["/Users/itoukazunari/Desktop/ec-app/src/componets/header/HeaderMenu.jsx"],"names":["React","useEffect","IconButton","Badge","ShoppingCartIcon","FavoriteBorderIcon","MenuIcon","getProductsInCart","getUserId","useDispatch","useSelector","db","fetchProductsInCart","push","HeaderMenu","props","dispatch","selector","state","userId","productsInCart","unsubscribe","collection","doc","onSnapshot","snapshots","docChanges","forEach","change","product","data","changeType","type","index","findIndex","cartId","id","filter","length","e","handleDrawerToggle"],"mappings":"6IAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,OAAQC,KAAR,KAAoB,mBAApB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,iCAA7B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,mCAA/B,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,OAASC,iBAAT,CAA6BC,SAA7B,KAA8C,+BAA9C,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,EAAT,KAAoB,sBAApB,CACA,OAAQC,mBAAR,KAAkC,gCAAlC,CACA,OAAQC,IAAR,KAAmB,wBAAnB,CAEE,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAC9B,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CACA,GAAMQ,CAAAA,QAAQ,CAAGP,WAAW,CAAC,SAACQ,KAAD,QAAWA,CAAAA,KAAX,EAAD,CAA5B,CACA,GAAMC,CAAAA,MAAM,CAAGX,SAAS,CAACS,QAAD,CAAxB,CACA,GAAIG,CAAAA,cAAc,CAAGb,iBAAiB,CAACU,QAAD,CAAtC,CAEF;AACIhB,SAAS,CAAC,UAAM,CACZ,GAAMoB,CAAAA,WAAW,CAAGV,EAAE,CAACW,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BJ,MAA3B,EAAmCG,UAAnC,CAA8C,MAA9C,EACfE,UADe,CACJ,SAAAC,SAAS,CAAI,CAErBA,SAAS,CAACC,UAAV,GAAuBC,OAAvB,CAA+B,SAAAC,MAAM,CAAI,CACrC,GAAMC,CAAAA,OAAO,CAAGD,MAAM,CAACL,GAAP,CAAWO,IAAX,EAAhB,CACA,GAAMC,CAAAA,UAAU,CAAGH,MAAM,CAACI,IAA1B,CAEA,OAAQD,UAAR,EACI,IAAK,OAAL,CACIX,cAAc,CAACP,IAAf,CAAoBgB,OAApB,EACA,MACJ,IAAK,UAAL,CACI,GAAMI,CAAAA,KAAK,CAAGb,cAAc,CAACc,SAAf,CAAyB,SAAAL,OAAO,QAAIA,CAAAA,OAAO,CAACM,MAAR,GAAmBP,MAAM,CAACL,GAAP,CAAWa,EAAlC,EAAhC,CAAd,CACAhB,cAAc,CAACa,KAAD,CAAd,CAAwBJ,OAAxB,CACA,MACJ,IAAK,SAAL,CACIT,cAAc,CAAGA,cAAc,CAACiB,MAAf,CAAsB,SAAAR,OAAO,QAAIA,CAAAA,OAAO,CAACM,MAAR,GAAmBP,MAAM,CAACL,GAAP,CAAWa,EAAlC,EAA7B,CAAjB,CACA,MACJ,QACI,MAZR,CAcH,CAlBD,EAoBApB,QAAQ,CAACJ,mBAAmB,CAACQ,cAAD,CAApB,CAAR,CACH,CAxBe,CAApB,CA0BA,MAAO,kBAAMC,CAAAA,WAAW,EAAjB,EAAP,CACH,CA5BQ,CA4BP,EA5BO,CAAT,CA8BF,mBACI,wCACE,KAAC,UAAD,EAAa,OAAO,CAAE,yBAAIL,CAAAA,QAAQ,CAACH,IAAI,CAAC,OAAD,CAAL,CAAZ,EAAtB,uBACE,KAAC,KAAD,EAAO,YAAY,CAAEO,cAAc,CAACkB,MAApC,CAA4C,KAAK,CAAC,WAAlD,uBACA,KAAE,gBAAF,IADA,EADF,EADF,cAME,KAAC,UAAD,wBACE,KAAC,kBAAD,IADF,EANF,cASE,KAAC,UAAD,EAAc,OAAO,CAAE,iBAACC,CAAD,QAAOxB,CAAAA,KAAK,CAACyB,kBAAN,CAAyBD,CAAzB,CAA4B,IAA5B,CAAP,EAAvB,uBACE,KAAC,QAAD,IADF,EATF,GADJ,CAeD,CApDC,CAsDF,cAAezB,CAAAA,UAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Badge} from \"@material-ui/core\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { getProductsInCart,  getUserId } from '../../reducks/users/selectors'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { db }  from '../../firebase/index'\nimport {fetchProductsInCart} from '../../reducks/users/operations'\nimport {push} from 'connected-react-router'\n\n  const HeaderMenu = (props) => {\n  const dispatch = useDispatch()\n  const selector = useSelector((state) => state);\n  const userId = getUserId(selector);\n  let productsInCart = getProductsInCart(selector);\n\n// Listen products in user's cart\n    useEffect(() => {\n        const unsubscribe = db.collection('users').doc(userId).collection('cart')\n            .onSnapshot(snapshots => {\n\n                snapshots.docChanges().forEach(change => {\n                    const product = change.doc.data();\n                    const changeType = change.type\n\n                    switch (changeType) {\n                        case 'added':\n                            productsInCart.push(product);\n                            break;\n                        case 'modified':\n                            const index = productsInCart.findIndex(product => product.cartId === change.doc.id)\n                            productsInCart[index] = product;\n                            break;\n                        case 'removed':\n                            productsInCart = productsInCart.filter(product => product.cartId !== change.doc.id);\n                            break;\n                        default:\n                            break;\n                    }\n                });\n\n                dispatch(fetchProductsInCart(productsInCart))\n            });\n\n        return () => unsubscribe()\n    },[]);\n\n  return(\n      <>\n        <IconButton  onClick={()=>dispatch(push('/cart'))}>\n          <Badge badgeContent={productsInCart.length} color=\"secondary\">\n          < ShoppingCartIcon />\n          </Badge>\n        </IconButton>\n        <IconButton  >\n          <FavoriteBorderIcon />\n        </IconButton>\n        <IconButton   onClick={(e) => props.handleDrawerToggle(e, true)}>\n          <MenuIcon />\n        </IconButton>\n      </>\n  )\n}\n\nexport default HeaderMenu"]},"metadata":{},"sourceType":"module"}