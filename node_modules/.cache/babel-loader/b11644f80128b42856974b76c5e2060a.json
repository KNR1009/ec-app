{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import React from'react';import{useSelector,useDispatch}from'react-redux';import{getIsSignedIn}from'./reducks/users/selectors';import{useEffect}from'react';import{listenAuthState}from'./reducks/users/operations';export var Auth=function Auth(_ref){var children=_ref.children;var dispatch=useDispatch();// storeの状態を取得\nvar selector=useSelector(function(state){return state;});// store内部のログイン状態の確認\nvar isSignedIn=getIsSignedIn(selector);useEffect(function(){if(!isSignedIn){dispatch(listenAuthState());}},[]);if(!isSignedIn){return/*#__PURE__*/_jsx(_Fragment,{});}else{return children;}};","map":{"version":3,"sources":["/Users/itoukazunari/Desktop/ec-app/src/Auth.jsx"],"names":["React","useSelector","useDispatch","getIsSignedIn","useEffect","listenAuthState","Auth","children","dispatch","selector","state","isSignedIn"],"mappings":"gGAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,aAAT,KAA8B,2BAA9B,CACA,OAASC,SAAT,KAA0B,OAA1B,CACA,OAASC,eAAT,KAAgC,4BAAhC,CAGA,MAAO,IAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAgB,IAAdC,CAAAA,QAAc,MAAdA,QAAc,CAElC,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CACA;AACA,GAAMO,CAAAA,QAAQ,CAAGR,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAX,EAAD,CAA5B,CACA;AACA,GAAMC,CAAAA,UAAU,CAAGR,aAAa,CAACM,QAAD,CAAhC,CAEAL,SAAS,CAAC,UAAI,CACV,GAAG,CAACO,UAAJ,CAAe,CACbH,QAAQ,CAACH,eAAe,EAAhB,CAAR,CACD,CACJ,CAJQ,CAIN,EAJM,CAAT,CAMA,GAAG,CAACM,UAAJ,CAAe,CACb,mBAAO,kBAAP,CACD,CAFD,IAEM,CACJ,MAAOJ,CAAAA,QAAP,CACD,CACF,CAnBM","sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getIsSignedIn } from './reducks/users/selectors'\nimport { useEffect } from 'react';\nimport { listenAuthState } from './reducks/users/operations';\n\n\nexport const Auth = ({children}) => {\n\n  const dispatch = useDispatch()\n  // storeの状態を取得\n  const selector = useSelector((state) => state);\n  // store内部のログイン状態の確認\n  const isSignedIn = getIsSignedIn(selector)\n\n  useEffect(()=>{\n      if(!isSignedIn){\n        dispatch(listenAuthState())\n      }\n  }, [])\n\n  if(!isSignedIn){\n    return <></>\n  }else {\n    return children\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}