{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/itoukazunari/Desktop/ec-app/src/componets/header/HeaderMenu.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Badge } from \"@material-ui/core\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { getProductsInCart, getUserId } from '../../reducks/users/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { db } from '../../firebase/index';\nimport { ProductCard } from '../Producuts';\n\nconst HeaderMenu = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const selector = useSelector(state => state);\n  const userId = getUserId(selector);\n  let productsInCart = getProductsInCart(selector); // Listen products in user's cart\n\n  useEffect(() => {\n    const unsubscribe = db.collection('users').doc(userId).collection('cart').onSnapshot(snapshots => {\n      snapshots.docChanges().forEach(change => {\n        const product = change.doc.data();\n        const changeType = change.type;\n\n        switch (changeType) {\n          case 'added':\n            productsInCart.push(product);\n            break;\n\n          case 'modified':\n            const index = productsInCart.findIndex(product => product.cartId === change.doc.id);\n            productsInCart[index] = product;\n            break;\n\n          case 'removed':\n            productsInCart = productsInCart.filter(product => product.cartId !== change.doc.id);\n            break;\n\n          default:\n            break;\n        }\n      });\n      dispatch(fetchProductsInCart(productsInCart));\n    });\n    return () => unsubscribe();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      children: /*#__PURE__*/_jsxDEV(Badge, {\n        badgeContent: productsInCart.length,\n        color: \"secondary\",\n        children: /*#__PURE__*/_jsxDEV(ShoppingCartIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      children: /*#__PURE__*/_jsxDEV(FavoriteBorderIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: e => props.handleDrawerToggle(e, true),\n      children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(HeaderMenu, \"I1e6xWLg+kqrhUy4QEVy0hYKLSU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = HeaderMenu;\nexport default HeaderMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderMenu\");","map":{"version":3,"sources":["/Users/itoukazunari/Desktop/ec-app/src/componets/header/HeaderMenu.jsx"],"names":["React","useEffect","IconButton","Badge","ShoppingCartIcon","FavoriteBorderIcon","MenuIcon","getProductsInCart","getUserId","useDispatch","useSelector","db","ProductCard","HeaderMenu","props","dispatch","selector","state","userId","productsInCart","unsubscribe","collection","doc","onSnapshot","snapshots","docChanges","forEach","change","product","data","changeType","type","push","index","findIndex","cartId","id","filter","fetchProductsInCart","length","e","handleDrawerToggle"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAQC,KAAR,QAAoB,mBAApB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,iBAAT,EAA6BC,SAA7B,QAA8C,+BAA9C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,EAAT,QAAoB,sBAApB;AACA,SAASC,WAAT,QAA4B,cAA5B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACE,QAAMO,QAAQ,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAZ,CAA5B;AACA,QAAMC,MAAM,GAAGV,SAAS,CAACQ,QAAD,CAAxB;AACA,MAAIG,cAAc,GAAGZ,iBAAiB,CAACS,QAAD,CAAtC,CAJ0B,CAM5B;;AACEf,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMmB,WAAW,GAAGT,EAAE,CAACU,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BJ,MAA3B,EAAmCG,UAAnC,CAA8C,MAA9C,EACfE,UADe,CACJC,SAAS,IAAI;AAErBA,MAAAA,SAAS,CAACC,UAAV,GAAuBC,OAAvB,CAA+BC,MAAM,IAAI;AACrC,cAAMC,OAAO,GAAGD,MAAM,CAACL,GAAP,CAAWO,IAAX,EAAhB;AACA,cAAMC,UAAU,GAAGH,MAAM,CAACI,IAA1B;;AAEA,gBAAQD,UAAR;AACI,eAAK,OAAL;AACIX,YAAAA,cAAc,CAACa,IAAf,CAAoBJ,OAApB;AACA;;AACJ,eAAK,UAAL;AACI,kBAAMK,KAAK,GAAGd,cAAc,CAACe,SAAf,CAAyBN,OAAO,IAAIA,OAAO,CAACO,MAAR,KAAmBR,MAAM,CAACL,GAAP,CAAWc,EAAlE,CAAd;AACAjB,YAAAA,cAAc,CAACc,KAAD,CAAd,GAAwBL,OAAxB;AACA;;AACJ,eAAK,SAAL;AACIT,YAAAA,cAAc,GAAGA,cAAc,CAACkB,MAAf,CAAsBT,OAAO,IAAIA,OAAO,CAACO,MAAR,KAAmBR,MAAM,CAACL,GAAP,CAAWc,EAA/D,CAAjB;AACA;;AACJ;AACI;AAZR;AAcH,OAlBD;AAoBArB,MAAAA,QAAQ,CAACuB,mBAAmB,CAACnB,cAAD,CAApB,CAAR;AACH,KAxBe,CAApB;AA0BA,WAAO,MAAMC,WAAW,EAAxB;AACH,GA5BQ,EA4BP,EA5BO,CAAT;AA8BF,sBACI;AAAA,4BACE,QAAC,UAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,YAAY,EAAED,cAAc,CAACoB,MAApC;AAA4C,QAAA,KAAK,EAAC,WAAlD;AAAA,+BACA,QAAE,gBAAF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,UAAD;AAAA,6BACE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eASE,QAAC,UAAD;AAAc,MAAA,OAAO,EAAGC,CAAD,IAAO1B,KAAK,CAAC2B,kBAAN,CAAyBD,CAAzB,EAA4B,IAA5B,CAA9B;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADJ;AAeD,CApDD;;GAAM3B,U;UACaJ,W,EACEC,W;;;KAFfG,U;AAsDN,eAAeA,UAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Badge} from \"@material-ui/core\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { getProductsInCart,  getUserId } from '../../reducks/users/selectors'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { db }  from '../../firebase/index'\nimport { ProductCard } from '../Producuts';\n\nconst HeaderMenu = (props) => {\n  const dispatch = useDispatch()\n    const selector = useSelector((state) => state);\n    const userId = getUserId(selector);\n    let productsInCart = getProductsInCart(selector);\n\n  // Listen products in user's cart\n    useEffect(() => {\n        const unsubscribe = db.collection('users').doc(userId).collection('cart')\n            .onSnapshot(snapshots => {\n\n                snapshots.docChanges().forEach(change => {\n                    const product = change.doc.data();\n                    const changeType = change.type\n\n                    switch (changeType) {\n                        case 'added':\n                            productsInCart.push(product);\n                            break;\n                        case 'modified':\n                            const index = productsInCart.findIndex(product => product.cartId === change.doc.id)\n                            productsInCart[index] = product;\n                            break;\n                        case 'removed':\n                            productsInCart = productsInCart.filter(product => product.cartId !== change.doc.id);\n                            break;\n                        default:\n                            break;\n                    }\n                });\n\n                dispatch(fetchProductsInCart(productsInCart))\n            });\n\n        return () => unsubscribe()\n    },[]);\n\n  return(\n      <>\n        <IconButton  >\n          <Badge badgeContent={productsInCart.length} color=\"secondary\">\n          < ShoppingCartIcon />\n          </Badge>\n        </IconButton>\n        <IconButton  >\n          <FavoriteBorderIcon />\n        </IconButton>\n        <IconButton   onClick={(e) => props.handleDrawerToggle(e, true)}>\n          <MenuIcon />\n        </IconButton>\n      </>\n  )\n}\n\nexport default HeaderMenu"]},"metadata":{},"sourceType":"module"}