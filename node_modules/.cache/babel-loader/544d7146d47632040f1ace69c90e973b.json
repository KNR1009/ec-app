{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/itoukazunari/Desktop/ec-app/src/componets/Producuts/ImageArea.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\nimport { storage } from '../../firebase/index';\n\nconst ImageArea = props => {\n  _s();\n\n  const uploadImage = useCallback(event => {\n    const file = event.target.files;\n    let blob = new Blob(file, {\n      type: \"image/jpeg\"\n    }); // Generate random 16 digits strings\n\n    const S = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n    const N = 16;\n    const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map(n => S[n % S.length]).join(\"\");\n    const uploadRef = storage.ref(\"images\").child(fileName);\n    const uploadTask = uploadRef.put(blob);\n    uploadTask.then(() => {\n      // Handle successful uploads on complete\n      uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n        const newImage = {\n          id: fileName,\n          path: downloadURL\n        };\n        props.setImages(prevState => [...prevState, newImage]);\n      });\n    });\n  }, [props.setImages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"u-text-right\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u5546\\u54C1\\u753B\\u50CF\\u3092\\u767B\\u9332\\u3059\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(AddPhotoAlternateIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"u-display-none\",\n          type: \"file\",\n          id: \"image\",\n          onChange: event => uploadImage(event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImageArea, \"2yN7bXdIc2wq1yZPO+7wjoFVCJo=\");\n\n_c = ImageArea;\nexport default ImageArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageArea\");","map":{"version":3,"sources":["/Users/itoukazunari/Desktop/ec-app/src/componets/Producuts/ImageArea.jsx"],"names":["React","useCallback","IconButton","AddPhotoAlternateIcon","storage","ImageArea","props","uploadImage","event","file","target","files","blob","Blob","type","S","N","fileName","Array","from","crypto","getRandomValues","Uint32Array","map","n","length","join","uploadRef","ref","child","uploadTask","put","then","snapshot","getDownloadURL","downloadURL","newImage","id","path","setImages","prevState"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;AACA,SAAQC,OAAR,QAAsB,sBAAtB;;AAOA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAMC,WAAW,GAAGN,WAAW,CAC5BO,KAAD,IAAW;AACT,UAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA1B;AACA,QAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASJ,IAAT,EAAe;AAAEK,MAAAA,IAAI,EAAE;AAAR,KAAf,CAAX,CAFS,CAIT;;AACA,UAAMC,CAAC,GACL,gEADF;AAEA,UAAMC,CAAC,GAAG,EAAV;AACA,UAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAWC,MAAM,CAACC,eAAP,CAAuB,IAAIC,WAAJ,CAAgBN,CAAhB,CAAvB,CAAX,EACdO,GADc,CACTC,CAAD,IAAOT,CAAC,CAACS,CAAC,GAAGT,CAAC,CAACU,MAAP,CADE,EAEdC,IAFc,CAET,EAFS,CAAjB;AAIA,UAAMC,SAAS,GAAGvB,OAAO,CAACwB,GAAR,CAAY,QAAZ,EAAsBC,KAAtB,CAA4BZ,QAA5B,CAAlB;AACA,UAAMa,UAAU,GAAGH,SAAS,CAACI,GAAV,CAAcnB,IAAd,CAAnB;AAEAkB,IAAAA,UAAU,CAACE,IAAX,CAAgB,MAAM;AACpB;AACAF,MAAAA,UAAU,CAACG,QAAX,CAAoBL,GAApB,CAAwBM,cAAxB,GAAyCF,IAAzC,CAA+CG,WAAD,IAAiB;AAC7D,cAAMC,QAAQ,GAAG;AAAEC,UAAAA,EAAE,EAAEpB,QAAN;AAAgBqB,UAAAA,IAAI,EAAEH;AAAtB,SAAjB;AACA7B,QAAAA,KAAK,CAACiC,SAAN,CAAiBC,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeJ,QAAf,CAA/B;AACD,OAHD;AAID,KAND;AAOD,GAvB4B,EAwB7B,CAAC9B,KAAK,CAACiC,SAAP,CAxB6B,CAA/B;AA4BA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAA,6BACE;AAAA,gCACE,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,SAAS,EAAC,gBADZ;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,EAAE,EAAC,OAHL;AAIE,UAAA,QAAQ,EAAG/B,KAAD,IAAWD,WAAW,CAACC,KAAD;AAJlC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA9CD;;GAAMH,S;;KAAAA,S;AAgDN,eAAeA,SAAf","sourcesContent":["import React, { useCallback } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\nimport {storage} from '../../firebase/index'\n\n\n\n\n\n\nconst ImageArea = (props) => {\n\n  const uploadImage = useCallback(\n    (event) => {\n      const file = event.target.files;\n      let blob = new Blob(file, { type: \"image/jpeg\" });\n\n      // Generate random 16 digits strings\n      const S =\n        \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n      const N = 16;\n      const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N)))\n        .map((n) => S[n % S.length])\n        .join(\"\");\n\n      const uploadRef = storage.ref(\"images\").child(fileName);\n      const uploadTask = uploadRef.put(blob);\n\n      uploadTask.then(() => {\n        // Handle successful uploads on complete\n        uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n          const newImage = { id: fileName, path: downloadURL };\n          props.setImages((prevState) => [...prevState, newImage]);\n        });\n      });\n    },\n    [props.setImages]\n  );\n\n\n  return (\n    <div className=\"u-text-right\">\n      <span>商品画像を登録する</span>\n      <IconButton>\n        <label>\n          <AddPhotoAlternateIcon />\n          <input\n            className=\"u-display-none\"\n            type=\"file\"\n            id=\"image\"\n            onChange={(event) => uploadImage(event)}\n          />\n        </label>\n      </IconButton>\n    </div>\n  );\n}\n\nexport default ImageArea"]},"metadata":{},"sourceType":"module"}