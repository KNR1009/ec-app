{"ast":null,"code":"import { db, FirebaseTimestamp } from \"../../firebase/index\";\nimport { push } from \"connected-react-router\";\nimport { ProductList } from \"../../templates\";\nconst productsRef = db.collection(\"products\"); // firebaseから商品情報を取得\n\nexport const fetchProducts = () => {\n  return async dispatch => {\n    productsRef.orderBy('updated_at', 'desc').get().then(snapshots => {\n      const productLIst = [];\n      snapshots.forEach(snapshot => {\n        const prpduct = snapshot.data();\n        ProductList.push(product);\n      });\n    });\n  };\n};\nexport const saveProduct = (id, name, description, category, gender, price, images, sizes) => {\n  return async dispatch => {\n    const timestamp = FirebaseTimestamp.now();\n    const data = {\n      category: category,\n      description: description,\n      gender: gender,\n      images: images,\n      name: name,\n      price: parseInt(price, 10),\n      updated_at: timestamp,\n      sizes: sizes\n    };\n\n    if (id === \"\") {\n      const ref = productsRef.doc();\n      data.created_at = timestamp;\n      id = ref.id;\n      data.id = id;\n    }\n\n    return productsRef.doc(id).set(data, {\n      merge: true\n    }).then(() => {\n      dispatch(push('/'));\n    }).catch(error => {\n      throw new Error(error);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/itoukazunari/Desktop/ec-app/src/reducks/products/operations.js"],"names":["db","FirebaseTimestamp","push","ProductList","productsRef","collection","fetchProducts","dispatch","orderBy","get","then","snapshots","productLIst","forEach","snapshot","prpduct","data","product","saveProduct","id","name","description","category","gender","price","images","sizes","timestamp","now","parseInt","updated_at","ref","doc","created_at","set","merge","catch","error","Error"],"mappings":"AAAA,SAASA,EAAT,EAAaC,iBAAb,QAAsC,sBAAtC;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AAEA,MAAMC,WAAW,GAAGJ,EAAE,CAACK,UAAH,CAAc,UAAd,CAApB,C,CAEA;;AACA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAO,MAAMC,QAAN,IAAmB;AACtBH,IAAAA,WAAW,CAACI,OAAZ,CAAoB,YAApB,EAAkC,MAAlC,EAA0CC,GAA1C,GACCC,IADD,CACMC,SAAS,IAAI;AACf,YAAMC,WAAW,GAAG,EAApB;AACAD,MAAAA,SAAS,CAACE,OAAV,CAAkBC,QAAQ,IAAI;AAC5B,cAAMC,OAAO,GAAGD,QAAQ,CAACE,IAAT,EAAhB;AACAb,QAAAA,WAAW,CAACD,IAAZ,CAAiBe,OAAjB;AACD,OAHD;AAIH,KAPD;AAQH,GATD;AAUD,CAXM;AAaP,OAAO,MAAMC,WAAW,GAAG,CACzBC,EADyB,EAEzBC,IAFyB,EAGzBC,WAHyB,EAIzBC,QAJyB,EAKzBC,MALyB,EAMzBC,KANyB,EAOzBC,MAPyB,EAQzBC,KARyB,KAStB;AACH,SAAO,MAAOnB,QAAP,IAAoB;AACzB,UAAMoB,SAAS,GAAG1B,iBAAiB,CAAC2B,GAAlB,EAAlB;AAEE,UAAMZ,IAAI,GAAG;AACXM,MAAAA,QAAQ,EAAEA,QADC;AAEXD,MAAAA,WAAW,EAAEA,WAFF;AAGXE,MAAAA,MAAM,EAAEA,MAHG;AAIXE,MAAAA,MAAM,EAAEA,MAJG;AAKXL,MAAAA,IAAI,EAAEA,IALK;AAMXI,MAAAA,KAAK,EAAEK,QAAQ,CAACL,KAAD,EAAQ,EAAR,CANJ;AAOXM,MAAAA,UAAU,EAAEH,SAPD;AAQXD,MAAAA,KAAK,EAACA;AARK,KAAb;;AAWA,QAAIP,EAAE,KAAK,EAAX,EAAe;AACT,YAAMY,GAAG,GAAG3B,WAAW,CAAC4B,GAAZ,EAAZ;AACAhB,MAAAA,IAAI,CAACiB,UAAL,GAAkBN,SAAlB;AACAR,MAAAA,EAAE,GAAGY,GAAG,CAACZ,EAAT;AACAH,MAAAA,IAAI,CAACG,EAAL,GAAUA,EAAV;AACH;;AAEJ,WAAOf,WAAW,CAAC4B,GAAZ,CAAgBb,EAAhB,EAAoBe,GAApB,CAAwBlB,IAAxB,EAA8B;AAACmB,MAAAA,KAAK,EAAE;AAAR,KAA9B,EACCzB,IADD,CACM,MAAM;AACRH,MAAAA,QAAQ,CAACL,IAAI,CAAC,GAAD,CAAL,CAAR;AACH,KAHD,EAGGkC,KAHH,CAGUC,KAAD,IAAW;AAChB,YAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH,KALD,CAAP;AAOF,GA5BD;AA6BD,CAvCM","sourcesContent":["import { db, FirebaseTimestamp } from \"../../firebase/index\";\nimport { push } from \"connected-react-router\";\nimport { ProductList } from \"../../templates\";\n\nconst productsRef = db.collection(\"products\");\n\n// firebaseから商品情報を取得\nexport const fetchProducts = () => {\n  return async(dispatch) => {\n      productsRef.orderBy('updated_at', 'desc').get()\n      .then(snapshots => {\n          const productLIst = []\n          snapshots.forEach(snapshot => {\n            const prpduct = snapshot.data()\n            ProductList.push(product)\n          })\n      })\n  }\n}\n\nexport const saveProduct = (\n  id,\n  name,\n  description,\n  category,\n  gender,\n  price,\n  images,\n  sizes\n) => {\n  return async (dispatch) => {\n    const timestamp = FirebaseTimestamp.now();\n\n      const data = {\n        category: category,\n        description: description,\n        gender: gender,\n        images: images,\n        name: name,\n        price: parseInt(price, 10),\n        updated_at: timestamp,\n        sizes:sizes\n      }\n\n      if (id === \"\") {\n            const ref = productsRef.doc()\n            data.created_at = timestamp;\n            id = ref.id;\n            data.id = id;\n        }\n\n     return productsRef.doc(id).set(data, {merge: true})\n            .then(() => {\n                dispatch(push('/'))\n            }).catch((error) => {\n                throw new Error(error)\n            })\n    \n  };\n};"]},"metadata":{},"sourceType":"module"}