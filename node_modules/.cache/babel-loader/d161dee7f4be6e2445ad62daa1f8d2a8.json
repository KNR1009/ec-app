{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/itoukazunari/Desktop/ec-app/src/componets/header/HeaderMenu.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Badge } from \"@material-ui/core\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { getProductInCart, getUserId } from '../../reducks/users/selectors';\nimport { useSelector } from 'react-redux';\nimport { db } from '../../firebase/index';\nimport { ProductCard } from '../Producuts';\n\nconst HeaderMenu = props => {\n  _s();\n\n  // カート内の商品数を種と得する\n  const selector = useSelector(state => state);\n  let productInCart = getProductInCart(selector); // ログインユーザーの取得\n\n  const uid = getUserId(selector); // firestoreにリスナーの設定\n\n  useEffect(() => {\n    const nusubscribe = db.collection('users').doc(uid).collection('cart').onSnapshot(snapshot => {\n      snapshot.docChanges().forEach(change => {\n        const product = change.doc.data();\n        const changeType = change.type;\n\n        switch (changeType) {\n          case 'added':\n            productInCart.push(product);\n            break;\n\n          case 'modified':\n            const index = productInCart.findIndex(product => product.cartId === change.doc.id);\n            ProductInCard[index] = product;\n        }\n      });\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      children: /*#__PURE__*/_jsxDEV(Badge, {\n        badgeContent: productInCart.length,\n        color: \"secondary\",\n        children: /*#__PURE__*/_jsxDEV(ShoppingCartIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      children: /*#__PURE__*/_jsxDEV(FavoriteBorderIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: e => props.handleDrawerToggle(e, true),\n      children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(HeaderMenu, \"2EdQldqTppVHJ1c4vFiYHAamHw0=\", false, function () {\n  return [useSelector];\n});\n\n_c = HeaderMenu;\nexport default HeaderMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderMenu\");","map":{"version":3,"sources":["/Users/itoukazunari/Desktop/ec-app/src/componets/header/HeaderMenu.jsx"],"names":["React","useEffect","IconButton","Badge","ShoppingCartIcon","FavoriteBorderIcon","MenuIcon","getProductInCart","getUserId","useSelector","db","ProductCard","HeaderMenu","props","selector","state","productInCart","uid","nusubscribe","collection","doc","onSnapshot","snapshot","docChanges","forEach","change","product","data","changeType","type","push","index","findIndex","cartId","id","ProductInCard","length","e","handleDrawerToggle"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAQC,KAAR,QAAoB,mBAApB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,gBAAT,EAA4BC,SAA5B,QAA6C,+BAA7C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,EAAT,QAAoB,sBAApB;AACA,SAASC,WAAT,QAA4B,cAA5B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B;AACA,QAAMC,QAAQ,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAV,CAA5B;AACA,MAAIC,aAAa,GAAGT,gBAAgB,CAACO,QAAD,CAApC,CAH4B,CAK5B;;AACA,QAAMG,GAAG,GAAIT,SAAS,CAACM,QAAD,CAAtB,CAN4B,CAQ5B;;AACAb,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMiB,WAAW,GAAGR,EAAE,CAACS,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BH,GAA3B,EAAgCE,UAAhC,CAA2C,MAA3C,EAAmDE,UAAnD,CAA8DC,QAAQ,IAAI;AAC1FA,MAAAA,QAAQ,CAACC,UAAT,GAAsBC,OAAtB,CAA8BC,MAAM,IAAI;AACtC,cAAMC,OAAO,GAAGD,MAAM,CAACL,GAAP,CAAWO,IAAX,EAAhB;AACA,cAAMC,UAAU,GAAGH,MAAM,CAACI,IAA1B;;AAEA,gBAAQD,UAAR;AACE,eAAK,OAAL;AACEZ,YAAAA,aAAa,CAACc,IAAd,CAAmBJ,OAAnB;AACA;;AAEF,eAAK,UAAL;AACE,kBAAMK,KAAK,GAAGf,aAAa,CAACgB,SAAd,CAAwBN,OAAO,IAAIA,OAAO,CAACO,MAAR,KAAmBR,MAAM,CAACL,GAAP,CAAWc,EAAjE,CAAd;AACAC,YAAAA,aAAa,CAACJ,KAAD,CAAb,GAAuBL,OAAvB;AAPJ;AAWD,OAfD;AAgBH,KAjBmB,CAApB;AAkBD,GAnBQ,CAAT;AAqBA,sBACI;AAAA,4BACE,QAAC,UAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,YAAY,EAAEV,aAAa,CAACoB,MAAnC;AAA2C,QAAA,KAAK,EAAC,WAAjD;AAAA,+BACA,QAAE,gBAAF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,UAAD;AAAA,6BACE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eASE,QAAC,UAAD;AAAc,MAAA,OAAO,EAAGC,CAAD,IAAOxB,KAAK,CAACyB,kBAAN,CAAyBD,CAAzB,EAA4B,IAA5B,CAA9B;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADJ;AAeD,CA7CD;;GAAMzB,U;UAEaH,W;;;KAFbG,U;AA+CN,eAAeA,UAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Badge} from \"@material-ui/core\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { getProductInCart,  getUserId } from '../../reducks/users/selectors'\nimport { useSelector } from 'react-redux';\nimport { db }  from '../../firebase/index'\nimport { ProductCard } from '../Producuts';\n\nconst HeaderMenu = (props) => {\n  // カート内の商品数を種と得する\n  const selector = useSelector(state => state)\n  let productInCart = getProductInCart(selector)\n\n  // ログインユーザーの取得\n  const uid =  getUserId(selector)\n\n  // firestoreにリスナーの設定\n  useEffect(()=>{\n    const nusubscribe = db.collection('users').doc(uid).collection('cart').onSnapshot(snapshot => {\n        snapshot.docChanges().forEach(change => {\n          const product = change.doc.data();\n          const changeType = change.type;\n\n          switch (changeType){\n            case 'added':\n              productInCart.push(product)\n              break;\n            \n            case 'modified':\n              const index = productInCart.findIndex(product => product.cartId === change.doc.id)\n              ProductInCard[index] = product\n\n\n          }\n        })\n    })\n  })\n\n  return(\n      <>\n        <IconButton  >\n          <Badge badgeContent={productInCart.length} color=\"secondary\">\n          < ShoppingCartIcon />\n          </Badge>\n        </IconButton>\n        <IconButton  >\n          <FavoriteBorderIcon />\n        </IconButton>\n        <IconButton   onClick={(e) => props.handleDrawerToggle(e, true)}>\n          <MenuIcon />\n        </IconButton>\n      </>\n  )\n}\n\nexport default HeaderMenu"]},"metadata":{},"sourceType":"module"}