{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/itoukazunari/Desktop/ec-app/src/componets/Producuts/ImageArea.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\nimport { storage } from '../../firebase/index';\nimport { ImagePreview } from \"./index\";\n\nconst ImageArea = props => {\n  _s();\n\n  const images = props.images; // 画像を削除するメソット\n\n  const deleteImage = useCallback(async id => {\n    const ret = window.confirm('この画像を削除しますか？');\n\n    if (!ret) {\n      return false;\n    } else {\n      const newImages = images.filter(image => image.id !== id);\n      props.setImages(newImages);\n      return storage.ref('images').child(id).delete();\n    }\n  }, [images]);\n  const uploadImage = useCallback(event => {\n    const file = event.target.files;\n    let blob = new Blob(file, {\n      type: \"image/jpeg\"\n    }); // Generate random 16 digits strings\n\n    const S = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n    const N = 16;\n    const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map(n => S[n % S.length]).join('');\n    const uploadRef = storage.ref('images').child(fileName);\n    const uploadTask = uploadRef.put(blob);\n    uploadTask.then(() => {\n      // Handle successful uploads on complete\n      uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n        const newImage = {\n          id: fileName,\n          path: downloadURL\n        };\n        props.setImages(prevState => [...prevState, newImage]);\n      });\n    }).catch(() => {});\n  }, [props.setImages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-grid__list-images\",\n      children: images.length > 0 && images.map(image => /*#__PURE__*/_jsxDEV(ImagePreview, {\n        id: image.id,\n        path: image.path,\n        delete: deleteImage\n      }, image.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 35\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"u-text-right\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u5546\\u54C1\\u753B\\u50CF\\u3092\\u767B\\u9332\\u3059\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(AddPhotoAlternateIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"u-display-none\",\n            type: \"file\",\n            id: \"image\",\n            onChange: event => uploadImage(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImageArea, \"ODqoIddmEzSs2vL9UKmwXibij1w=\");\n\n_c = ImageArea;\nexport default ImageArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageArea\");","map":{"version":3,"sources":["/Users/itoukazunari/Desktop/ec-app/src/componets/Producuts/ImageArea.jsx"],"names":["React","useCallback","IconButton","AddPhotoAlternateIcon","storage","ImagePreview","ImageArea","props","images","deleteImage","id","ret","window","confirm","newImages","filter","image","setImages","ref","child","delete","uploadImage","event","file","target","files","blob","Blob","type","S","N","fileName","Array","from","crypto","getRandomValues","Uint32Array","map","n","length","join","uploadRef","uploadTask","put","then","snapshot","getDownloadURL","downloadURL","newImage","path","prevState","catch"],"mappings":"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","sourcesContent":["import React, { useCallback } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\nimport {storage} from '../../firebase/index'\nimport {ImagePreview} from \"./index\";\n\nconst ImageArea = (props) => {\n\n  const images = props.images;\n\n  // 画像を削除するメソット\n\n\n    const deleteImage = useCallback(async (id) => {\n        const ret = window.confirm('この画像を削除しますか？')\n        if (!ret) {\n            return false\n        } else {\n            const newImages = images.filter(image => image.id !== id)\n            props.setImages(newImages);\n            return storage.ref('images').child(id).delete()\n        }\n    }, [images])\n    \n\n  const uploadImage = useCallback((event) => {\n        const file = event.target.files;\n        let blob = new Blob(file, { type: \"image/jpeg\" });\n\n        // Generate random 16 digits strings\n        const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n        const N=16;\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\n\n        const uploadRef = storage.ref('images').child(fileName);\n        const uploadTask = uploadRef.put(blob);\n\n        uploadTask.then(() => {\n            // Handle successful uploads on complete\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n                const newImage = {id: fileName, path: downloadURL};\n                props.setImages((prevState => [...prevState, newImage]))\n                \n            });\n        }).catch(() => {\n            \n        });\n    }, [props.setImages])\n\n  return (\n    <div>\n      <div className=\"p-grid__list-images\">\n          {images.length > 0 && (\n              images.map(image => <ImagePreview id={image.id} path={image.path} key={image.id} delete={deleteImage}/> )\n          )}\n      </div>\n      <div className=\"u-text-right\">\n      <span>商品画像を登録する</span>\n      <IconButton>\n        <label>\n          <AddPhotoAlternateIcon />\n          <input\n            className=\"u-display-none\"\n            type=\"file\"\n            id=\"image\"\n            onChange={(event) => uploadImage(event)}\n          />\n        </label>\n      </IconButton>\n    </div>\n    </div>\n  );\n}\nexport default ImageArea"]},"metadata":{},"sourceType":"module"}