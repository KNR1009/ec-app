{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/itoukazunari/Desktop/ec-app/src/componets/Producuts/SetSizesArea.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { TextInput } from \"../UIkit\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from \"@material-ui/styles\";\nconst useStyles = makeStyles({\n  iconCell: {\n    height: 48,\n    width: 48,\n    padding: 0\n  },\n  checkIcon: {\n    float: 'right'\n  }\n});\n\nconst SetSizesArea = props => {\n  _s();\n\n  const classes = useStyles();\n  const [index, setIndex] = useState(0);\n  const [size, setSize] = useState(\"\");\n  const [quantity, setQuantity] = useState(0);\n  const inputSize = useCallback(event => {\n    setSize(event.target.value);\n  }, [setSize]);\n  const inputQuantity = useCallback(event => {\n    setQuantity(event.target.value);\n  }, [setQuantity]); // サイズと数量のstateを変更するメソット\n\n  const addSize = useCallback((index, size, quantity) => {\n    if (size === \"\" || quantity === \"\") {\n      return false;\n    } else {\n      props.setSizes(prevState => [...prevState, {\n        size: size,\n        quantity: quantity\n      }]);\n      setIndex(index + 1);\n      setSize(\"\");\n      setQuantity(0);\n    }\n  }); // サイズと数量を編集\n\n  const editSize = (index, size, quantity) => {\n    setIndex(index);\n    setSize(size);\n    setQuantity(quantity);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u30B5\\u30A4\\u30BA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\u6570\\u91CF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.iconCell\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.iconCell\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: props.sizes.length > 0 && props.sizes.map((item, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.iconCell,\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                className: classes.iconCell,\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.iconCell,\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this)]\n          }, item.size, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextInput, {\n          fullWidth: false,\n          label: \"サイズ\",\n          multiline: false,\n          required: true,\n          rows: 1,\n          value: size,\n          type: \"text\",\n          onChange: inputSize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n          fullWidth: false,\n          label: \"数量\",\n          multiline: false,\n          required: true,\n          rows: 1,\n          value: quantity,\n          type: \"number\",\n          onChange: inputQuantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        className: classes.checkIcon,\n        onClick: () => addSize(index, size, quantity),\n        children: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SetSizesArea, \"1JuGnSzndq4KCAHiWglPDTCUNWc=\", false, function () {\n  return [useStyles];\n});\n\n_c = SetSizesArea;\nexport default SetSizesArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetSizesArea\");","map":{"version":3,"sources":["/Users/itoukazunari/Desktop/ec-app/src/componets/Producuts/SetSizesArea.jsx"],"names":["React","useCallback","useEffect","useState","TextInput","IconButton","CheckCircleIcon","DeleteIcon","EditIcon","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","makeStyles","useStyles","iconCell","height","width","padding","checkIcon","float","SetSizesArea","props","classes","index","setIndex","size","setSize","quantity","setQuantity","inputSize","event","target","value","inputQuantity","addSize","setSizes","prevState","editSize","sizes","length","map","item"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\nimport {TextInput} from \"../UIkit\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {makeStyles} from \"@material-ui/styles\";\n\n\nconst useStyles = makeStyles({\n  iconCell:{\n    height:48,\n    width:48,\n    padding:0\n  },\n  checkIcon: {\n      float: 'right'\n  },\n})\n\nconst SetSizesArea = (props) => {\n  const classes = useStyles();\n\n  const [index, setIndex] = useState(0);\n  const [size, setSize] = useState(\"\");\n  const [quantity, setQuantity] = useState(0);\n\n  const inputSize = useCallback((event) => {\n    setSize(event.target.value)\n  }, [setSize])\n\n  const inputQuantity = useCallback((event) => {\n    setQuantity(event.target.value)\n  }, [setQuantity])\n\n  // サイズと数量のstateを変更するメソット\n  const addSize = useCallback((index, size, quantity)=>{\n      if(size === \"\" || quantity === \"\"){\n        return false;\n      }else{\n        props.setSizes(prevState => [...prevState, {size: size, quantity: quantity}])\n        setIndex(index + 1);\n        setSize(\"\");\n        setQuantity(0);\n      }\n  })  \n\n  // サイズと数量を編集\n  const editSize = (index, size, quantity) => {\n        setIndex(index);\n        setSize(size);\n        setQuantity(quantity);\n  }\n\n\n  return(\n    <div>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>サイズ</TableCell>\n              <TableCell>数量</TableCell>\n              <TableCell className={classes.iconCell}></TableCell>\n              <TableCell className={classes.iconCell}></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {props.sizes.length > 0 && (\n              props.sizes.map((item, index) => (\n                  <TableRow key={item.size}>\n                  <TableCell>{item.size}</TableCell>\n                  <TableCell>{item.quantity}</TableCell>\n                  <TableCell className={classes.iconCell}>\n                    <IconButton className={classes.iconCell}>\n                    <EditIcon />\n                    </IconButton>\n                  </TableCell>\n                  <TableCell className={classes.iconCell}>\n                    <DeleteIcon />\n                  </TableCell>\n                </TableRow>\n              ))\n            )}\n          </TableBody>\n        </Table>\n        <div>\n        <TextInput\n          fullWidth={false}\n          label={\"サイズ\"}\n          multiline={false}\n          required={true}\n          rows={1}\n          value={size}\n          type={\"text\"}\n          onChange={inputSize}\n        />\n        <TextInput\n          fullWidth={false}\n          label={\"数量\"}\n          multiline={false}\n          required={true}\n          rows={1}\n          value={quantity}\n          type={\"number\"}\n          onChange={inputQuantity}\n        />\n        </div>\n        <IconButton className={classes.checkIcon} onClick={() => addSize(index, size, quantity)}>\n          <CheckCircleIcon/>\n        </IconButton>\n      </TableContainer >\n    </div>\n\n  )\n}\n\nexport default SetSizesArea"]},"metadata":{},"sourceType":"module"}