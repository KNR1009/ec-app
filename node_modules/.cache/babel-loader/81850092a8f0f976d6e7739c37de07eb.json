{"ast":null,"code":"import { signInAction } from \"./actions\";\nimport { push } from 'connected-react-router';\nexport const signIn = () => {\n  // コールバック関数を返り値として持つようにする\n  return async (dispatch, getState) => {\n    // 現在のstateを取得する\n    const state = getState();\n    const isSignedIn = state.users.isSignedIn; // ログイン状態だった場合にgithubんおAPIを叩く(非同期処理)\n\n    if (!isSignedIn) {\n      const url = \"https://api.github.com/users/aponasi178cm\"; // 非同期処理を記述\n\n      const response = await fetch(url).then(res => res.json()).catch(() => null);\n      const username = response.login; // 取得したレスポンスをstoreに格納する\n\n      dispatch(signInAction({\n        isSignedIn: true,\n        username: username\n      }));\n    }\n\n    ; // 成功したらHomeに遷移する\n\n    dispatch(push('/'));\n  }; // 上記の記述を先ほどのLoginコンポーネントのクリック時のイベントで発火するようにする\n};","map":{"version":3,"sources":["/Users/itoukazunari/Desktop/ec-app/src/reducks/users/operations.js"],"names":["signInAction","push","signIn","dispatch","getState","state","isSignedIn","users","url","response","fetch","then","res","json","catch","username","login"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,WAA3B;AACA,SAAQC,IAAR,QAAmB,wBAAnB;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAC1B;AACA,SAAO,OAAMC,QAAN,EAAgBC,QAAhB,KAA6B;AACpC;AACA,UAAMC,KAAK,GAAGD,QAAQ,EAAtB;AACA,UAAME,UAAU,GAAGD,KAAK,CAACE,KAAN,CAAYD,UAA/B,CAHoC,CAKpC;;AACA,QAAG,CAACA,UAAJ,EAAe;AACb,YAAME,GAAG,GAAG,2CAAZ,CADa,CAGb;;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAL,CAAWG,IAAX,CAAgBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAvB,EAAmCC,KAAnC,CAAyC,MAAI,IAA7C,CAAvB;AAEA,YAAMC,QAAQ,GAAGN,QAAQ,CAACO,KAA1B,CANa,CAQb;;AACAb,MAAAA,QAAQ,CAACH,YAAY,CAAC;AACpBM,QAAAA,UAAU,EAAE,IADQ;AAEpBS,QAAAA,QAAQ,EAAEA;AAFU,OAAD,CAAb,CAAR;AAIC;;AAAA,KAnBiC,CAqBlC;;AACAZ,IAAAA,QAAQ,CAACF,IAAI,CAAC,GAAD,CAAL,CAAR;AACD,GAvBD,CAF0B,CA2B1B;AACD,CA5BM","sourcesContent":["import {signInAction} from \"./actions\";\nimport {push} from 'connected-react-router';\n\nexport const signIn = () => {\n  // コールバック関数を返り値として持つようにする\n  return async(dispatch, getState) => {\n  // 現在のstateを取得する\n  const state = getState();\n  const isSignedIn = state.users.isSignedIn;\n\n  // ログイン状態だった場合にgithubんおAPIを叩く(非同期処理)\n  if(!isSignedIn){\n    const url = \"https://api.github.com/users/aponasi178cm\";\n\n    // 非同期処理を記述\n    const response = await fetch(url).then(res => res.json()).catch(()=>null)\n\n    const username = response.login;\n\n    // 取得したレスポンスをstoreに格納する\n    dispatch(signInAction({\n      isSignedIn: true,\n      username: username\n    }))\n    };\n\n    // 成功したらHomeに遷移する\n    dispatch(push('/'));\n  }\n\n  // 上記の記述を先ほどのLoginコンポーネントのクリック時のイベントで発火するようにする\n}"]},"metadata":{},"sourceType":"module"}