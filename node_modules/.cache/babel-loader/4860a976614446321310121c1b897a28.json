{"ast":null,"code":"import { db, FirebaseTimestamp } from \"../../firebase/index\";\nimport { push } from \"connected-react-router\";\nimport { fetchProductsAction, deleteProductsAction } from \"./actions\";\nconst productsRef = db.collection(\"products\"); // 商品を削除するメソット\n\nexport const deleteProduct = id => {\n  return async (dispatch, getState) => {\n    productsRef.doc(id).delete().then(() => {\n      const prevState = getState().products.list;\n      const nextProducts = prevState.filter(product => product.id !== id);\n      dispatch(deleteProductsAction(nextProducts));\n    });\n  };\n}; // firebaseから商品情報を取得\n\nexport const fetchProducts = () => {\n  return async dispatch => {\n    productsRef.orderBy('updated_at', 'desc').get().then(snapshots => {\n      const productList = [];\n      snapshots.forEach(snapshot => {\n        const product = snapshot.data();\n        productList.push(product);\n      });\n      dispatch(fetchProductsAction(productList));\n    });\n  };\n}; // カート商品の注文の処理\n\nexport const orderProduct = (productsInCart, price) => {\n  return async (dispatch, getState) => {\n    const uid = getState.uid; // 現在のログインユーザーの取得\n\n    const userRef = db.collection('users').doc(uid);\n  };\n};\nexport const saveProduct = (id, name, description, category, gender, price, images, sizes) => {\n  return async dispatch => {\n    const timestamp = FirebaseTimestamp.now();\n    const data = {\n      category: category,\n      description: description,\n      gender: gender,\n      images: images,\n      name: name,\n      price: parseInt(price, 10),\n      updated_at: timestamp,\n      sizes: sizes\n    };\n\n    if (id === \"\") {\n      const ref = productsRef.doc();\n      data.created_at = timestamp;\n      id = ref.id;\n      data.id = id;\n    }\n\n    return productsRef.doc(id).set(data, {\n      merge: true\n    }).then(() => {\n      dispatch(push('/'));\n    }).catch(error => {\n      throw new Error(error);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/itoukazunari/Desktop/ec-app/src/reducks/products/operations.js"],"names":["db","FirebaseTimestamp","push","fetchProductsAction","deleteProductsAction","productsRef","collection","deleteProduct","id","dispatch","getState","doc","delete","then","prevState","products","list","nextProducts","filter","product","fetchProducts","orderBy","get","snapshots","productList","forEach","snapshot","data","orderProduct","productsInCart","price","uid","userRef","saveProduct","name","description","category","gender","images","sizes","timestamp","now","parseInt","updated_at","ref","created_at","set","merge","catch","error","Error"],"mappings":"AAAA,SAASA,EAAT,EAAaC,iBAAb,QAAsC,sBAAtC;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAAQC,mBAAR,EAA6BC,oBAA7B,QAAwD,WAAxD;AAEA,MAAMC,WAAW,GAAGL,EAAE,CAACM,UAAH,CAAc,UAAd,CAApB,C,CAEA;;AACA,OAAO,MAAMC,aAAa,GAAIC,EAAD,IAAM;AACjC,SAAO,OAAMC,QAAN,EAAgBC,QAAhB,KAA6B;AAChCL,IAAAA,WAAW,CAACM,GAAZ,CAAgBH,EAAhB,EAAoBI,MAApB,GACCC,IADD,CACM,MAAI;AACN,YAAMC,SAAS,GAAGJ,QAAQ,GAAGK,QAAX,CAAoBC,IAAtC;AACD,YAAMC,YAAY,GAAGH,SAAS,CAACI,MAAV,CAAiBC,OAAO,IAAIA,OAAO,CAACX,EAAR,KAAeA,EAA3C,CAArB;AACCC,MAAAA,QAAQ,CAACL,oBAAoB,CAACa,YAAD,CAArB,CAAR;AACH,KALD;AAMH,GAPD;AAQD,CATM,C,CAWP;;AACA,OAAO,MAAMG,aAAa,GAAG,MAAM;AAEjC,SAAO,MAAMX,QAAN,IAAmB;AACtBJ,IAAAA,WAAW,CAACgB,OAAZ,CAAoB,YAApB,EAAkC,MAAlC,EAA0CC,GAA1C,GAAgDT,IAAhD,CAAqDU,SAAS,IAAI;AAC9D,YAAMC,WAAW,GAAG,EAApB;AACAD,MAAAA,SAAS,CAACE,OAAV,CAAkBC,QAAQ,IAAI;AAC5B,cAAMP,OAAO,GAAGO,QAAQ,CAACC,IAAT,EAAhB;AACAH,QAAAA,WAAW,CAACtB,IAAZ,CAAiBiB,OAAjB;AACD,OAHD;AAIAV,MAAAA,QAAQ,CAACN,mBAAmB,CAACqB,WAAD,CAApB,CAAR;AACH,KAPD;AAQH,GATD;AAUD,CAZM,C,CAcP;;AAEA,OAAO,MAAMI,YAAY,GAAG,CAACC,cAAD,EAAiBC,KAAjB,KAA2B;AACnD,SAAO,OAAMrB,QAAN,EAAgBC,QAAhB,KAA6B;AAElC,UAAMqB,GAAG,GAAGrB,QAAQ,CAACqB,GAArB,CAFkC,CAER;;AAC1B,UAAMC,OAAO,GAAGhC,EAAE,CAACM,UAAH,CAAc,OAAd,EAAuBK,GAAvB,CAA2BoB,GAA3B,CAAhB;AACD,GAJD;AAKH,CANM;AAQP,OAAO,MAAME,WAAW,GAAG,CACzBzB,EADyB,EAEzB0B,IAFyB,EAGzBC,WAHyB,EAIzBC,QAJyB,EAKzBC,MALyB,EAMzBP,KANyB,EAOzBQ,MAPyB,EAQzBC,KARyB,KAStB;AACH,SAAO,MAAO9B,QAAP,IAAoB;AACzB,UAAM+B,SAAS,GAAGvC,iBAAiB,CAACwC,GAAlB,EAAlB;AAEE,UAAMd,IAAI,GAAG;AACXS,MAAAA,QAAQ,EAAEA,QADC;AAEXD,MAAAA,WAAW,EAAEA,WAFF;AAGXE,MAAAA,MAAM,EAAEA,MAHG;AAIXC,MAAAA,MAAM,EAAEA,MAJG;AAKXJ,MAAAA,IAAI,EAAEA,IALK;AAMXJ,MAAAA,KAAK,EAAEY,QAAQ,CAACZ,KAAD,EAAQ,EAAR,CANJ;AAOXa,MAAAA,UAAU,EAAEH,SAPD;AAQXD,MAAAA,KAAK,EAACA;AARK,KAAb;;AAWA,QAAI/B,EAAE,KAAK,EAAX,EAAe;AACT,YAAMoC,GAAG,GAAGvC,WAAW,CAACM,GAAZ,EAAZ;AACAgB,MAAAA,IAAI,CAACkB,UAAL,GAAkBL,SAAlB;AACAhC,MAAAA,EAAE,GAAGoC,GAAG,CAACpC,EAAT;AACAmB,MAAAA,IAAI,CAACnB,EAAL,GAAUA,EAAV;AACH;;AAEJ,WAAOH,WAAW,CAACM,GAAZ,CAAgBH,EAAhB,EAAoBsC,GAApB,CAAwBnB,IAAxB,EAA8B;AAACoB,MAAAA,KAAK,EAAE;AAAR,KAA9B,EACClC,IADD,CACM,MAAM;AACRJ,MAAAA,QAAQ,CAACP,IAAI,CAAC,GAAD,CAAL,CAAR;AACH,KAHD,EAGG8C,KAHH,CAGUC,KAAD,IAAW;AAChB,YAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH,KALD,CAAP;AAOF,GA5BD;AA6BD,CAvCM","sourcesContent":["import { db, FirebaseTimestamp } from \"../../firebase/index\";\nimport { push } from \"connected-react-router\";\nimport {fetchProductsAction, deleteProductsAction} from \"./actions\"\n\nconst productsRef = db.collection(\"products\");\n\n// 商品を削除するメソット\nexport const deleteProduct = (id)=>{\n  return async(dispatch, getState) => {\n      productsRef.doc(id).delete()\n      .then(()=>{\n          const prevState = getState().products.list;\n         const nextProducts = prevState.filter(product => product.id !== id)\n          dispatch(deleteProductsAction(nextProducts))\n      })\n  }\n}\n\n// firebaseから商品情報を取得\nexport const fetchProducts = () => {\n  \n  return async(dispatch) => {\n      productsRef.orderBy('updated_at', 'desc').get().then(snapshots => {\n          const productList = []\n          snapshots.forEach(snapshot => {\n            const product = snapshot.data();\n            productList.push(product);\n          })\n          dispatch(fetchProductsAction(productList))\n      })\n  }\n}\n\n// カート商品の注文の処理\n\nexport const orderProduct = (productsInCart, price) => {\n    return async(dispatch, getState) => {\n\n      const uid = getState.uid; // 現在のログインユーザーの取得\n      const userRef = db.collection('users').doc(uid)\n    }\n}\n\nexport const saveProduct = (\n  id,\n  name,\n  description,\n  category,\n  gender,\n  price,\n  images,\n  sizes\n) => {\n  return async (dispatch) => {\n    const timestamp = FirebaseTimestamp.now();\n\n      const data = {\n        category: category,\n        description: description,\n        gender: gender,\n        images: images,\n        name: name,\n        price: parseInt(price, 10),\n        updated_at: timestamp,\n        sizes:sizes\n      }\n\n      if (id === \"\") {\n            const ref = productsRef.doc()\n            data.created_at = timestamp;\n            id = ref.id;\n            data.id = id;\n        }\n\n     return productsRef.doc(id).set(data, {merge: true})\n            .then(() => {\n                dispatch(push('/'))\n            }).catch((error) => {\n                throw new Error(error)\n            })\n    \n  };\n};"]},"metadata":{},"sourceType":"module"}