{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/itoukazunari/Desktop/ec-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _regeneratorRuntime from\"/Users/itoukazunari/Desktop/ec-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/itoukazunari/Desktop/ec-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{db,FirebaseTimestamp}from\"../../firebase/index\";import{push}from\"connected-react-router\";import{fetchProductsAction,deleteProductsAction}from\"./actions\";var productsRef=db.collection(\"products\");// 商品を削除するメソット\nexport var deleteProduct=function deleteProduct(id){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch,getState){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:productsRef.doc(id).delete().then(function(){var prevState=getState().products.list;var nextProducts=prevState.filter(function(product){return product.id!==id;});dispatch(deleteProductsAction(nextProducts));});case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref.apply(this,arguments);};}();};// firebaseから商品情報を取得\nexport var fetchProducts=function fetchProducts(gender,category){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var query;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:query=productsRef.orderBy('updated_at','desc');query=gender!==\"\"?query.where('gender','==',gender):query;query=category!==\"\"?query.where('category','==',category):query;query.get().then(function(snapshots){var productList=[];snapshots.forEach(function(snapshot){var product=snapshot.data();productList.push(product);});dispatch(fetchProductsAction(productList));});case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3){return _ref2.apply(this,arguments);};}();};// カート商品の注文の処理\nexport var orderProduct=function orderProduct(productsInCart,price){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch,getState){var uid,userRef,timestamp,products,soldOutProducts,batch,_iterator,_step,_loop,errormessage;return _regeneratorRuntime.wrap(function _callee3$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:uid=getState().users.uid;// 現在のログインユーザーの取得\nuserRef=db.collection('users').doc(uid);// 現在のログインユーザーのfirebase情報取得\ntimestamp=FirebaseTimestamp.now();// 現在時刻の取得\nproducts={};// カートの商品を一旦格納する\nsoldOutProducts=[];// 売り切れ商品\nbatch=db.batch();// カート内の商品1つ1つに対して処理を行う\n_iterator=_createForOfIteratorHelper(productsInCart);_context4.prev=7;_loop=/*#__PURE__*/_regeneratorRuntime.mark(function _loop(){var product,snapshot,sizes,updateSizes;return _regeneratorRuntime.wrap(function _loop$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:product=_step.value;_context3.next=3;return productsRef.doc(product.productId).get();case 3:snapshot=_context3.sent;// カート内の商品idの取得\nsizes=snapshot.data().sizes;// firebaseのproductコレクションからsize情報を取得\n// sizeのオブジェクトの個数を減らす処理\nupdateSizes=sizes.map(function(size){// カート商品と一致している場合\nif(size.size===product.size){//  カート内部に入れている間に商品が購入された時の処理\nif(size.quantity===0){soldOutProducts.push(product.name);return size;}//  新しいサイズのオブジェクトを作成\nreturn{size:size.size,quantity:size.quantity-1};}else{// 個数の変更はなくそのまま返す\nreturn size;}});// 注文履歴を残す\nproducts[product.productId]={id:product.productId,images:product.images,name:product.name,price:product.price,size:product.size};// バッチ処理を記述する\nbatch.update(productsRef.doc(product.productId),{sizes:updateSizes});batch.delete(userRef.collection('cart').doc(product.cartId));case 9:case\"end\":return _context3.stop();}}},_loop);});_iterator.s();case 10:if((_step=_iterator.n()).done){_context4.next=14;break;}return _context4.delegateYield(_loop(),\"t0\",12);case 12:_context4.next=10;break;case 14:_context4.next=19;break;case 16:_context4.prev=16;_context4.t1=_context4[\"catch\"](7);_iterator.e(_context4.t1);case 19:_context4.prev=19;_iterator.f();return _context4.finish(19);case 22:if(!(soldOutProducts.length>0)){_context4.next=28;break;}errormessage=soldOutProducts.length>1?soldOutProducts.join('と'):soldOutProducts[0];alert('大変申し訳ございません'+errormessage+'は在庫切れとなったため注文処理を中断しました');return _context4.abrupt(\"return\",false);case 28:// 先ほどのbatch処理を全て行う\nbatch.commit().then(function(){// firebaseに注文履歴を残す\nvar orderRef=userRef.collection('orders').doc();var date=timestamp.toDate();// Calculate shipping date which is the date after 3 days\nvar shippingDate=FirebaseTimestamp.fromDate(new Date(date.setDate(date.getDate()+3)));var history={amount:price,created_at:timestamp,id:orderRef.id,products:products,shipping_date:shippingDate,updated_at:timestamp};// 全てが完了したら上記を保存して、注文確認ページへpush\norderRef.set(history);dispatch(push('/'));}).catch(function(){alert('注文処理に失敗しました。通信環境もご確認の、もう一度お試しください');});case 29:case\"end\":return _context4.stop();}}},_callee3,null,[[7,16,19,22]]);}));return function(_x4,_x5){return _ref3.apply(this,arguments);};}();};export var saveProduct=function saveProduct(id,name,description,category,gender,price,images,sizes){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var timestamp,data,ref;return _regeneratorRuntime.wrap(function _callee4$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:timestamp=FirebaseTimestamp.now();data={category:category,description:description,gender:gender,images:images,name:name,price:parseInt(price,10),updated_at:timestamp,sizes:sizes};if(id===\"\"){ref=productsRef.doc();data.created_at=timestamp;id=ref.id;data.id=id;}return _context5.abrupt(\"return\",productsRef.doc(id).set(data,{merge:true}).then(function(){dispatch(push('/'));}).catch(function(error){throw new Error(error);}));case 4:case\"end\":return _context5.stop();}}},_callee4);}));return function(_x6){return _ref4.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/itoukazunari/Desktop/ec-app/src/reducks/products/operations.js"],"names":["db","FirebaseTimestamp","push","fetchProductsAction","deleteProductsAction","productsRef","collection","deleteProduct","id","dispatch","getState","doc","delete","then","prevState","products","list","nextProducts","filter","product","fetchProducts","gender","category","query","orderBy","where","get","snapshots","productList","forEach","snapshot","data","orderProduct","productsInCart","price","uid","users","userRef","timestamp","now","soldOutProducts","batch","productId","sizes","updateSizes","map","size","quantity","name","images","update","cartId","length","errormessage","join","alert","commit","orderRef","date","toDate","shippingDate","fromDate","Date","setDate","getDate","history","amount","created_at","shipping_date","updated_at","set","catch","saveProduct","description","parseInt","ref","merge","error","Error"],"mappings":"geAAA,OAASA,EAAT,CAAaC,iBAAb,KAAsC,sBAAtC,CACA,OAASC,IAAT,KAAqB,wBAArB,CACA,OAAQC,mBAAR,CAA6BC,oBAA7B,KAAwD,WAAxD,CAGA,GAAMC,CAAAA,WAAW,CAAGL,EAAE,CAACM,UAAH,CAAc,UAAd,CAApB,CAGA;AACA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,EAAD,CAAM,CACjC,+FAAO,iBAAMC,QAAN,CAAgBC,QAAhB,kHACHL,WAAW,CAACM,GAAZ,CAAgBH,EAAhB,EAAoBI,MAApB,GACCC,IADD,CACM,UAAI,CACN,GAAMC,CAAAA,SAAS,CAAGJ,QAAQ,GAAGK,QAAX,CAAoBC,IAAtC,CACD,GAAMC,CAAAA,YAAY,CAAGH,SAAS,CAACI,MAAV,CAAiB,SAAAC,OAAO,QAAIA,CAAAA,OAAO,CAACX,EAAR,GAAeA,EAAnB,EAAxB,CAArB,CACCC,QAAQ,CAACL,oBAAoB,CAACa,YAAD,CAArB,CAAR,CACH,CALD,EADG,sDAAP,mEAQD,CATM,CAWP;AACA,MAAO,IAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,MAAD,CAASC,QAAT,CAAsB,CAEjD,gGAAO,kBAAMb,QAAN,gIAECc,KAFD,CAESlB,WAAW,CAACmB,OAAZ,CAAoB,YAApB,CAAkC,MAAlC,CAFT,CAGDD,KAAK,CAAIF,MAAM,GAAK,EAAZ,CAAkBE,KAAK,CAACE,KAAN,CAAY,QAAZ,CAAsB,IAAtB,CAA4BJ,MAA5B,CAAlB,CAAwDE,KAAhE,CACAA,KAAK,CAAID,QAAQ,GAAK,EAAd,CAAoBC,KAAK,CAACE,KAAN,CAAY,UAAZ,CAAwB,IAAxB,CAA8BH,QAA9B,CAApB,CAA8DC,KAAtE,CAGFA,KAAK,CAACG,GAAN,GAAYb,IAAZ,CAAiB,SAAAc,SAAS,CAAI,CAC1B,GAAMC,CAAAA,WAAW,CAAG,EAApB,CACAD,SAAS,CAACE,OAAV,CAAkB,SAAAC,QAAQ,CAAI,CAC5B,GAAMX,CAAAA,OAAO,CAAGW,QAAQ,CAACC,IAAT,EAAhB,CACAH,WAAW,CAAC1B,IAAZ,CAAiBiB,OAAjB,EACD,CAHD,EAIAV,QAAQ,CAACN,mBAAmB,CAACyB,WAAD,CAApB,CAAR,CACH,CAPD,EAPG,wDAAP,iEAgBD,CAlBM,CAoBP;AACA,MAAO,IAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,cAAD,CAAiBC,KAAjB,CAA2B,CACnD,gGAAO,kBAAMzB,QAAN,CAAgBC,QAAhB,kNAECyB,GAFD,CAEOzB,QAAQ,GAAG0B,KAAX,CAAiBD,GAFxB,CAE6B;AAC5BE,OAHD,CAGWrC,EAAE,CAACM,UAAH,CAAc,OAAd,EAAuBK,GAAvB,CAA2BwB,GAA3B,CAHX,CAG2C;AAC1CG,SAJD,CAIarC,iBAAiB,CAACsC,GAAlB,EAJb,CAIqC;AAEtCxB,QANC,CAMU,EANV,CAMc;AACfyB,eAPC,CAOiB,EAPjB,CAOqB;AAEpBC,KATD,CASSzC,EAAE,CAACyC,KAAH,EATT,CAWL;AAXK,qCAYgBR,cAZhB,wOAYKd,OAZL,oCAaqBd,CAAAA,WAAW,CAACM,GAAZ,CAAgBQ,OAAO,CAACuB,SAAxB,EAAmChB,GAAnC,EAbrB,QAaGI,QAbH,gBAa+D;AAC5Da,KAdH,CAcWb,QAAQ,CAACC,IAAT,GAAgBY,KAd3B,CAckC;AAErC;AACMC,WAjBH,CAiBiBD,KAAK,CAACE,GAAN,CAAU,SAAAC,IAAI,CAAI,CACpC;AACA,GAAGA,IAAI,CAACA,IAAL,GAAc3B,OAAO,CAAC2B,IAAzB,CAA8B,CAC5B;AACC,GAAIA,IAAI,CAACC,QAAL,GAAkB,CAAtB,CAAwB,CACrBP,eAAe,CAACtC,IAAhB,CAAqBiB,OAAO,CAAC6B,IAA7B,EACA,MAAOF,CAAAA,IAAP,CACF,CACF;AACC,MAAM,CACJA,IAAI,CAAEA,IAAI,CAACA,IADP,CAEJC,QAAQ,CAAED,IAAI,CAACC,QAAL,CAAgB,CAFtB,CAAN,CAIF,CAXD,IAWK,CACH;AACA,MAAOD,CAAAA,IAAP,CACD,CACF,CAjBmB,CAjBjB,CAmCH;AACA/B,QAAQ,CAACI,OAAO,CAACuB,SAAT,CAAR,CAA8B,CACxBlC,EAAE,CAAEW,OAAO,CAACuB,SADY,CAExBO,MAAM,CAAE9B,OAAO,CAAC8B,MAFQ,CAGxBD,IAAI,CAAE7B,OAAO,CAAC6B,IAHU,CAIxBd,KAAK,CAAEf,OAAO,CAACe,KAJS,CAKxBY,IAAI,CAAE3B,OAAO,CAAC2B,IALU,CAA9B,CAQA;AACCL,KAAK,CAACS,MAAN,CACC7C,WAAW,CAACM,GAAZ,CAAgBQ,OAAO,CAACuB,SAAxB,CADD,CAEG,CAACC,KAAK,CAACC,WAAP,CAFH,EAKDH,KAAK,CAAC7B,MAAN,CACEyB,OAAO,CAAC/B,UAAR,CAAmB,MAAnB,EAA2BK,GAA3B,CAA+BQ,OAAO,CAACgC,MAAvC,CADF,EAlDG,6ZAyDAX,eAAe,CAACY,MAAhB,CAAyB,CAzDzB,4BA0DKC,YA1DL,CA0DqBb,eAAe,CAACY,MAAhB,CAAyB,CAA1B,CACnBZ,eAAe,CAACc,IAAhB,CAAqB,GAArB,CADmB,CAEnBd,eAAe,CAAC,CAAD,CA5DhB,CA6DDe,KAAK,CAAC,cAAgBF,YAAhB,CAA+B,wBAAhC,CAAL,CA7DC,iCA8DM,KA9DN,UAgEC;AACFZ,KAAK,CAACe,MAAN,GACG3C,IADH,CACQ,UAAI,CACR;AACE,GAAM4C,CAAAA,QAAQ,CAAGpB,OAAO,CAAC/B,UAAR,CAAmB,QAAnB,EAA6BK,GAA7B,EAAjB,CACA,GAAM+C,CAAAA,IAAI,CAAGpB,SAAS,CAACqB,MAAV,EAAb,CACA;AACA,GAAMC,CAAAA,YAAY,CAAG3D,iBAAiB,CAAC4D,QAAlB,CAA2B,GAAIC,CAAAA,IAAJ,CAASJ,IAAI,CAACK,OAAL,CAAaL,IAAI,CAACM,OAAL,GAAiB,CAA9B,CAAT,CAA3B,CAArB,CAEA,GAAMC,CAAAA,OAAO,CAAG,CACdC,MAAM,CAAEhC,KADM,CAEdiC,UAAU,CAAE7B,SAFE,CAGd9B,EAAE,CAAEiD,QAAQ,CAACjD,EAHC,CAIdO,QAAQ,CAAEA,QAJI,CAKdqD,aAAa,CAAER,YALD,CAMdS,UAAU,CAAE/B,SANE,CAAhB,CASA;AACAmB,QAAQ,CAACa,GAAT,CAAaL,OAAb,EACAxD,QAAQ,CAACP,IAAI,CAAC,GAAD,CAAL,CAAR,CAEH,CArBH,EAqBKqE,KArBL,CAqBW,UAAI,CACXhB,KAAK,CAAC,mCAAD,CAAL,CACD,CAvBH,EAjEC,6EAAP,qEA2FH,CA5FM,CA8FP,MAAO,IAAMiB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CACzBhE,EADyB,CAEzBwC,IAFyB,CAGzByB,WAHyB,CAIzBnD,QAJyB,CAKzBD,MALyB,CAMzBa,KANyB,CAOzBe,MAPyB,CAQzBN,KARyB,CAStB,CACH,gGAAO,kBAAOlC,QAAP,6IACC6B,SADD,CACarC,iBAAiB,CAACsC,GAAlB,EADb,CAGGR,IAHH,CAGU,CACXT,QAAQ,CAAEA,QADC,CAEXmD,WAAW,CAAEA,WAFF,CAGXpD,MAAM,CAAEA,MAHG,CAIX4B,MAAM,CAAEA,MAJG,CAKXD,IAAI,CAAEA,IALK,CAMXd,KAAK,CAAEwC,QAAQ,CAACxC,KAAD,CAAQ,EAAR,CANJ,CAOXmC,UAAU,CAAE/B,SAPD,CAQXK,KAAK,CAACA,KARK,CAHV,CAcH,GAAInC,EAAE,GAAK,EAAX,CAAe,CACHmE,GADG,CACGtE,WAAW,CAACM,GAAZ,EADH,CAEToB,IAAI,CAACoC,UAAL,CAAkB7B,SAAlB,CACA9B,EAAE,CAAGmE,GAAG,CAACnE,EAAT,CACAuB,IAAI,CAACvB,EAAL,CAAUA,EAAV,CACH,CAnBA,iCAqBGH,WAAW,CAACM,GAAZ,CAAgBH,EAAhB,EAAoB8D,GAApB,CAAwBvC,IAAxB,CAA8B,CAAC6C,KAAK,CAAE,IAAR,CAA9B,EACC/D,IADD,CACM,UAAM,CACRJ,QAAQ,CAACP,IAAI,CAAC,GAAD,CAAL,CAAR,CACH,CAHD,EAGGqE,KAHH,CAGS,SAACM,KAAD,CAAW,CAChB,KAAM,IAAIC,CAAAA,KAAJ,CAAUD,KAAV,CAAN,CACH,CALD,CArBH,0DAAP,iEA6BD,CAvCM","sourcesContent":["import { db, FirebaseTimestamp } from \"../../firebase/index\";\nimport { push } from \"connected-react-router\";\nimport {fetchProductsAction, deleteProductsAction} from \"./actions\"\n\n\nconst productsRef = db.collection(\"products\");\n\n\n// 商品を削除するメソット\nexport const deleteProduct = (id)=>{\n  return async(dispatch, getState) => {\n      productsRef.doc(id).delete()\n      .then(()=>{\n          const prevState = getState().products.list;\n         const nextProducts = prevState.filter(product => product.id !== id)\n          dispatch(deleteProductsAction(nextProducts))\n      })\n  }\n}\n\n// firebaseから商品情報を取得\nexport const fetchProducts = (gender, category) => {\n  \n  return async(dispatch) => {\n\n      let query = productsRef.orderBy('updated_at', 'desc');\n        query = (gender !== \"\") ? query.where('gender', '==', gender) : query;\n        query = (category !== \"\") ? query.where('category', '==', category) : query;\n\n\n      query.get().then(snapshots => {\n          const productList = []\n          snapshots.forEach(snapshot => {\n            const product = snapshot.data();\n            productList.push(product);\n          })\n          dispatch(fetchProductsAction(productList))\n      })\n  }\n}\n\n// カート商品の注文の処理\nexport const orderProduct = (productsInCart, price) => {\n    return async(dispatch, getState) => {\n\n      const uid = getState().users.uid; // 現在のログインユーザーの取得\n      const userRef = db.collection('users').doc(uid) // 現在のログインユーザーのfirebase情報取得\n      const timestamp = FirebaseTimestamp.now() // 現在時刻の取得\n\n      let products = {}; // カートの商品を一旦格納する\n      let soldOutProducts = []; // 売り切れ商品\n\n      const batch = db.batch();\n\n      // カート内の商品1つ1つに対して処理を行う\n      for(const product of productsInCart){\n        const snapshot = await  productsRef.doc(product.productId).get(); // カート内の商品idの取得\n        const sizes = snapshot.data().sizes; // firebaseのproductコレクションからsize情報を取得\n\n        // sizeのオブジェクトの個数を減らす処理\n        const updateSizes = sizes.map(size => {\n          // カート商品と一致している場合\n          if(size.size === product.size){\n            //  カート内部に入れている間に商品が購入された時の処理\n             if (size.quantity === 0){\n                soldOutProducts.push(product.name);\n                return size\n             }\n            //  新しいサイズのオブジェクトを作成\n             return{\n               size: size.size,\n               quantity: size.quantity - 1\n             }\n          }else{\n            // 個数の変更はなくそのまま返す\n            return size\n          }\n        });\n        // 注文履歴を残す\n        products[product.productId] = {\n              id: product.productId,\n              images: product.images,\n              name: product.name,\n              price: product.price,\n              size: product.size\n          };\n\n        // バッチ処理を記述する\n         batch.update(\n          productsRef.doc(product.productId),\n            {sizes:updateSizes}\n        )\n\n        batch.delete(\n          userRef.collection('cart').doc(product.cartId)\n        )\n      }\n\n       //  在庫がない商品が存在した場合は処理を起こさない\n      //  for文の外で実装を行う\n        if(soldOutProducts.length > 0) {\n          const errormessage = (soldOutProducts.length > 1) ? \n            soldOutProducts.join('と') :\n            soldOutProducts[0];\n          alert('大変申し訳ございません' + errormessage + 'は在庫切れとなったため注文処理を中断しました')\n          return false\n        }else{\n            // 先ほどのbatch処理を全て行う\n          batch.commit()\n            .then(()=>{\n              // firebaseに注文履歴を残す\n                const orderRef = userRef.collection('orders').doc();\n                const date = timestamp.toDate();\n                // Calculate shipping date which is the date after 3 days\n                const shippingDate = FirebaseTimestamp.fromDate(new Date(date.setDate(date.getDate() + 3)));\n\n                const history = {\n                  amount: price,\n                  created_at: timestamp,\n                  id: orderRef.id,\n                  products: products,\n                  shipping_date: shippingDate,\n                  updated_at: timestamp\n                }\n\n                // 全てが完了したら上記を保存して、注文確認ページへpush\n                orderRef.set(history);\n                dispatch(push('/'))\n\n            }).catch(()=>{\n              alert('注文処理に失敗しました。通信環境もご確認の、もう一度お試しください')\n            })\n        }\n    }\n}\n\nexport const saveProduct = (\n  id,\n  name,\n  description,\n  category,\n  gender,\n  price,\n  images,\n  sizes\n) => {\n  return async (dispatch) => {\n    const timestamp = FirebaseTimestamp.now();\n\n      const data = {\n        category: category,\n        description: description,\n        gender: gender,\n        images: images,\n        name: name,\n        price: parseInt(price, 10),\n        updated_at: timestamp,\n        sizes:sizes\n      }\n\n      if (id === \"\") {\n            const ref = productsRef.doc()\n            data.created_at = timestamp;\n            id = ref.id;\n            data.id = id;\n        }\n\n     return productsRef.doc(id).set(data, {merge: true})\n            .then(() => {\n                dispatch(push('/'))\n            }).catch((error) => {\n                throw new Error(error)\n            })\n    \n  };\n};"]},"metadata":{},"sourceType":"module"}