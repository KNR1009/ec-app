{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/itoukazunari/Desktop/ec-app/src/componets/Producuts/ImageArea.jsx\";\nimport React, { useCallback } from 'react';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\nimport { storage } from '../../firebase/index';\nconst uploadImage = useCallback(event => {\n  const file = event.target.files;\n  let blob = new Blob(file, {\n    type: \"image/jpeg\"\n  }); // Generate random 16 digits strings\n\n  const S = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n  const N = 16;\n  const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map(n => S[n % S.length]).join(\"\");\n  const uploadRef = storage.ref(\"images\").child(fileName);\n  const uploadTask = uploadRef.put(blob);\n  uploadTask.then(() => {\n    // Handle successful uploads on complete\n    uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n      const newImage = {\n        id: fileName,\n        path: downloadURL\n      };\n      props.setImages(prevState => [...prevState, newImage]);\n    });\n  }).catch(() => {\n    dispatch(hideLoadingAction());\n  });\n}, [props.setImages]);\n\nconst ImageArea = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"u-text-right\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u5546\\u54C1\\u753B\\u50CF\\u3092\\u767B\\u9332\\u3059\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(AddPhotoAlternateIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"u-display-none\",\n          type: \"file\",\n          id: \"image\",\n          onChange: event => uploadImage(event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ImageArea;\nexport default ImageArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageArea\");","map":{"version":3,"sources":["/Users/itoukazunari/Desktop/ec-app/src/componets/Producuts/ImageArea.jsx"],"names":["React","useCallback","IconButton","AddPhotoAlternateIcon","storage","uploadImage","event","file","target","files","blob","Blob","type","S","N","fileName","Array","from","crypto","getRandomValues","Uint32Array","map","n","length","join","uploadRef","ref","child","uploadTask","put","then","snapshot","getDownloadURL","downloadURL","newImage","id","path","props","setImages","prevState","catch","dispatch","hideLoadingAction","ImageArea"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;AACA,SAAQC,OAAR,QAAsB,sBAAtB;AAEA,MAAMC,WAAW,GAAGJ,WAAW,CAC5BK,KAAD,IAAW;AAET,QAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA1B;AACA,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASJ,IAAT,EAAe;AAAEK,IAAAA,IAAI,EAAE;AAAR,GAAf,CAAX,CAHS,CAKT;;AACA,QAAMC,CAAC,GAAG,gEAAV;AACA,QAAMC,CAAC,GAAG,EAAV;AACA,QAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAWC,MAAM,CAACC,eAAP,CAAuB,IAAIC,WAAJ,CAAgBN,CAAhB,CAAvB,CAAX,EACdO,GADc,CACTC,CAAD,IAAOT,CAAC,CAACS,CAAC,GAAGT,CAAC,CAACU,MAAP,CADE,EAEdC,IAFc,CAET,EAFS,CAAjB;AAIA,QAAMC,SAAS,GAAGrB,OAAO,CAACsB,GAAR,CAAY,QAAZ,EAAsBC,KAAtB,CAA4BZ,QAA5B,CAAlB;AACA,QAAMa,UAAU,GAAGH,SAAS,CAACI,GAAV,CAAcnB,IAAd,CAAnB;AAEAkB,EAAAA,UAAU,CACPE,IADH,CACQ,MAAM;AACV;AACAF,IAAAA,UAAU,CAACG,QAAX,CAAoBL,GAApB,CAAwBM,cAAxB,GAAyCF,IAAzC,CAA+CG,WAAD,IAAiB;AAC7D,YAAMC,QAAQ,GAAG;AAAEC,QAAAA,EAAE,EAAEpB,QAAN;AAAgBqB,QAAAA,IAAI,EAAEH;AAAtB,OAAjB;AACAI,MAAAA,KAAK,CAACC,SAAN,CAAiBC,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeL,QAAf,CAA/B;AAED,KAJD;AAKD,GARH,EASGM,KATH,CASS,MAAM;AACXC,IAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AACD,GAXH;AAYD,CA5B4B,EA6B7B,CAACL,KAAK,CAACC,SAAP,CA7B6B,CAA/B;;AAoCA,MAAMK,SAAS,GAAIN,KAAD,IAAW;AAC3B,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAA,6BACE;AAAA,gCACE,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,SAAS,EAAC,gBADZ;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,EAAE,EAAC,OAHL;AAIE,UAAA,QAAQ,EAAG/B,KAAD,IAAWD,WAAW,CAACC,KAAD;AAJlC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAjBD;;KAAMqC,S;AAmBN,eAAeA,SAAf","sourcesContent":["import React, {useCallback} from 'react'\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\nimport {storage} from '../../firebase/index'\n\nconst uploadImage = useCallback(\n  (event) => {\n   \n    const file = event.target.files;\n    let blob = new Blob(file, { type: \"image/jpeg\" });\n\n    // Generate random 16 digits strings\n    const S = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n    const N = 16;\n    const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N)))\n      .map((n) => S[n % S.length])\n      .join(\"\");\n\n    const uploadRef = storage.ref(\"images\").child(fileName);\n    const uploadTask = uploadRef.put(blob);\n\n    uploadTask\n      .then(() => {\n        // Handle successful uploads on complete\n        uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n          const newImage = { id: fileName, path: downloadURL };\n          props.setImages((prevState) => [...prevState, newImage]);\n         \n        });\n      })\n      .catch(() => {\n        dispatch(hideLoadingAction());\n      });\n  },\n  [props.setImages]\n);\n\n\n\n\n\nconst ImageArea = (props) => {\n  return (\n    <div className=\"u-text-right\">\n      <span>商品画像を登録する</span>\n      <IconButton>\n        <label>\n          <AddPhotoAlternateIcon />\n          <input\n            className=\"u-display-none\"\n            type=\"file\"\n            id=\"image\"\n            onChange={(event) => uploadImage(event)}\n          />\n        </label>\n      </IconButton>\n    </div>\n  );\n}\n\nexport default ImageArea"]},"metadata":{},"sourceType":"module"}