{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/itoukazunari/Desktop/ec-app/src/componets/header/Header.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport logo from '../../assets/img/src/icons/logo.png';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getIsSignedIn } from '../../reducks/users/selectors';\nimport { push } from 'connected-react-router';\nimport { HeaderMenu, CloseableDrawer } from './index';\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1\n  },\n  menuBar: {\n    backgroundColor: \"#fff\",\n    color: '#444'\n  },\n  toolBar: {\n    margin: '0 auto',\n    maxWidth: 1024,\n    width: '100%'\n  },\n  iconButtons: {\n    margin: '0 0 0 auto'\n  },\n  pointer: {\n    cursor: 'pointer'\n  }\n})); // 開閉メニューのpropsを作成\n\nconst [sideBarOpen, setSideBarOpen] = useState(false);\nconst handleDrawerToggle = useCallback((event, isOpen) => {\n  if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n    return;\n  }\n\n  setSideBarOpen(isOpen);\n}, [setSideBarOpen]);\n\nconst Header = () => {\n  _s();\n\n  const classes = useStyles();\n  const selector = useSelector(state => state);\n  const isSignedIn = getIsSignedIn(selector);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      className: classes.menuBar,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolBar,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Logo\",\n          src: logo,\n          width: \"128px\",\n          role: \"button\",\n          className: classes.pointer,\n          onClick: () => dispatch(push('/'))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), isSignedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.iconButtons,\n          children: /*#__PURE__*/_jsxDEV(HeaderMenu, {\n            handleDrawerToggle: handleDrawerToggle()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CloseableDrawer, {\n      open: sideBarOpen,\n      onclose: handleDrawerToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 6\n  }, this);\n};\n\n_s(Header, \"44UnI2OVfe7TkpcbBbdcWbknkxU=\", false, function () {\n  return [useStyles, useSelector, useDispatch];\n});\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/itoukazunari/Desktop/ec-app/src/componets/header/Header.jsx"],"names":["React","makeStyles","AppBar","Toolbar","Typography","IconButton","MenuIcon","AccountCircle","Switch","FormControlLabel","FormGroup","MenuItem","Menu","logo","useDispatch","useSelector","getIsSignedIn","push","HeaderMenu","CloseableDrawer","useStyles","root","flexGrow","menuBar","backgroundColor","color","toolBar","margin","maxWidth","width","iconButtons","pointer","cursor","sideBarOpen","setSideBarOpen","useState","handleDrawerToggle","useCallback","event","isOpen","type","key","Header","classes","selector","state","isSignedIn","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport logo from '../../assets/img/src/icons/logo.png'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getIsSignedIn } from '../../reducks/users/selectors';\nimport {push} from 'connected-react-router'\nimport {HeaderMenu ,CloseableDrawer} from './index'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuBar: {\n      backgroundColor: \"#fff\",\n      color: '#444',\n  },\n  toolBar: {\n    margin: '0 auto',\n    maxWidth: 1024,\n    width: '100%'\n  },\n  iconButtons: {\n      margin: '0 0 0 auto'\n  },\n  pointer: {\n    cursor: 'pointer'\n  }\n}));\n\n// 開閉メニューのpropsを作成\n\n const [sideBarOpen, setSideBarOpen] = useState(false);\n const handleDrawerToggle = useCallback((event, isOpen) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        setSideBarOpen(isOpen)\n    }, [setSideBarOpen]);\n\n\nconst Header = () => {\n  const classes = useStyles()\n  const selector = useSelector((state) => state)\n  const isSignedIn = getIsSignedIn(selector)\n  const dispatch = useDispatch();\n\n  return(\n     <div className={classes.root}>\n            <AppBar position=\"fixed\" className={classes.menuBar}>\n                <Toolbar className={classes.toolBar}>\n                    <img alt=\"Logo\" src={logo} width=\"128px\" role=\"button\" className={classes.pointer} onClick={() => dispatch(push('/'))}/>\n                    {isSignedIn && (\n                        <div className={classes.iconButtons}>\n                            <HeaderMenu handleDrawerToggle={handleDrawerToggle()}/>\n                        </div>\n                    )}\n                </Toolbar>\n            </AppBar>\n            <CloseableDrawer \n              open={sideBarOpen}\n              onclose={handleDrawerToggle}\n            />\n           \n        </div>\n  )\n}\n\nexport default Header"]},"metadata":{},"sourceType":"module"}