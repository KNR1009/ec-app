{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/itoukazunari/Desktop/ec-app/src/templates/ProductEdit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport { TextField, PrimaryButton, SelectBox } from \"../componets/UIkit/index\";\nimport { saveProduct } from \"../reducks/products/operations\";\nimport { useDispatch } from 'react-redux';\n\nconst ProductEdit = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [discription, setDiscription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [price, setPrice] = useState(\"\"); // onchangeに引き渡すコールバック\n\n  const inputName = useCallback(event => {\n    setName(event.target.value);\n  }, [setName]);\n  const inputDiscription = useCallback(event => {\n    setDiscription(event.target.value);\n  }, [setDiscription]);\n  const inputPrice = useCallback(event => {\n    setPrice(event.target.value);\n  }, [setPrice]); // カテゴリー用の連想配列\n\n  const categories = [{\n    id: 'tops',\n    name: \"トップス\"\n  }, {\n    id: \"shirts\",\n    name: 'シャツ'\n  }, {\n    id: 'pants',\n    name: 'パンツ'\n  }]; // 性別の連想配列\n\n  const genders = [{\n    id: \"all\",\n    name: \"すべて\"\n  }, {\n    id: \"male\",\n    name: \"メンズ\"\n  }, {\n    id: \"female\",\n    name: \"レディース\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c-section-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"u-text__headline u-text__center\",\n        children: \"\\u5546\\u54C1\\u306E\\u767B\\u9332\\u30FB\\u7DE8\\u96C6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"商品名\",\n        multiline: false,\n        required: true,\n        rows: 1,\n        value: name,\n        type: \"text\",\n        onChange: inputName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"商品説明\",\n        multiline: true,\n        required: true,\n        rows: 5,\n        value: discription,\n        type: \"text\",\n        onChange: inputDiscription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"価格\",\n        multiline: false,\n        required: true,\n        rows: 1,\n        value: price,\n        type: \"number\",\n        onChange: inputPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"module-spacer--medium\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(PrimaryButton, {\n        label: \"商品を追加\",\n        onClick: () => dispatch(saveProduct(name, discription, price))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductEdit, \"xexGxPlU9YLHYZOl1eHgV7VDerA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ProductEdit;\nexport default ProductEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEdit\");","map":{"version":3,"sources":["/Users/itoukazunari/Desktop/ec-app/src/templates/ProductEdit.jsx"],"names":["React","useState","useCallback","TextField","PrimaryButton","SelectBox","saveProduct","useDispatch","ProductEdit","dispatch","name","setName","discription","setDiscription","category","setCategory","gender","setGender","price","setPrice","inputName","event","target","value","inputDiscription","inputPrice","categories","id","genders"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport { TextField, PrimaryButton, SelectBox } from \"../componets/UIkit/index\";\nimport { saveProduct } from \"../reducks/products/operations\"\nimport { useDispatch } from 'react-redux';\n\nconst ProductEdit = () => {\n\n  const dispatch = useDispatch()\n\n  const [name, setName] = useState(\"\");\n  const [discription, setDiscription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n\n  // onchangeに引き渡すコールバック\n  const inputName = useCallback((event)=>{\n      setName(event.target.value)\n  }, [setName])\n\n  const inputDiscription = useCallback((event)=>{\n    setDiscription(event.target.value)\n  }, [setDiscription])\n\n  const inputPrice = useCallback((event)=>{\n    setPrice(event.target.value)\n  }, [setPrice])\n\n\n  // カテゴリー用の連想配列\n  const categories = [\n    {id: 'tops', name: \"トップス\"},\n    {id: \"shirts\", name:'シャツ'},\n    {id: 'pants', name: 'パンツ'}\n  ]\n\n  // 性別の連想配列\n     const genders = [\n       { id: \"all\", name: \"すべて\" },\n       { id: \"male\", name: \"メンズ\" },\n       { id: \"female\", name: \"レディース\" },\n     ];\n\n\n  return (\n    <section>\n      <div className=\"c-section-container\">\n        <h2 className=\"u-text__headline u-text__center\">商品の登録・編集</h2>\n        <TextField\n          fullWidth={true}\n          label={\"商品名\"}\n          multiline={false}\n          required={true}\n          rows={1}\n          value={name}\n          type={\"text\"}\n          onChange={inputName}\n        />\n        <TextField\n          fullWidth={true}\n          label={\"商品説明\"}\n          multiline={true}\n          required={true}\n          rows={5}\n          value={discription}\n          type={\"text\"}\n          onChange={inputDiscription}\n        />\n        {/* <SelectBox\n          label={\"カテゴリー\"}\n          options={categories}\n          required={true}\n          select={setCategory}\n          value={category}\n        />\n        <SelectBox\n          label={\"性別\"}\n          options={genders}\n          required={true}\n          select={setGender}\n          value={gender}\n        /> */}\n        <TextField\n          fullWidth={true}\n          label={\"価格\"}\n          multiline={false}\n          required={true}\n          rows={1}\n          value={price}\n          type={\"number\"}\n          onChange={inputPrice}\n        />\n      </div>\n\n      <div className=\"module-spacer--medium\"></div>\n      <div className=\"center\">\n        <PrimaryButton\n          label={\"商品を追加\"}\n          onClick={() =>\n            dispatch(saveProduct(name, discription, price))\n          }\n        />\n      </div>\n    </section>\n  );\n}\nexport default ProductEdit;"]},"metadata":{},"sourceType":"module"}