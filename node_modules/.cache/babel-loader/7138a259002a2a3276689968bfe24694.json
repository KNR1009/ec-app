{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/itoukazunari/Desktop/ec-app/src/componets/header/Header.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport logo from '../../assets/img/src/icons/logo.png';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getIsSignedIn } from '../../reducks/users/selectors';\nimport { push } from 'connected-react-router';\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1\n  },\n  menuBar: {\n    backgroundColor: \"#fff\",\n    color: '#444'\n  },\n  toolBar: {\n    margin: '0 auto',\n    maxWidth: 1024,\n    width: '100%'\n  },\n  IconButtons: {\n    margin: '0 0 0 auto'\n  },\n  pointer: {}\n}));\n\nconst Header = () => {\n  _s();\n\n  const classes = useStyles();\n  const selector = useSelector(state => state);\n  const isSignedIn = getIsSignedIn(selector);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      className: classes.menuBar,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Logo\",\n          src: logo,\n          width: \"128px\",\n          role: \"button\",\n          className: pointer,\n          onClick: () => dispatch(push('/'))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), isSignedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.iconButtons\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 6\n  }, this);\n};\n\n_s(Header, \"44UnI2OVfe7TkpcbBbdcWbknkxU=\", false, function () {\n  return [useStyles, useSelector, useDispatch];\n});\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/itoukazunari/Desktop/ec-app/src/componets/header/Header.jsx"],"names":["React","makeStyles","AppBar","Toolbar","Typography","IconButton","MenuIcon","AccountCircle","Switch","FormControlLabel","FormGroup","MenuItem","Menu","logo","useDispatch","useSelector","getIsSignedIn","push","useStyles","root","flexGrow","menuBar","backgroundColor","color","toolBar","margin","maxWidth","width","IconButtons","pointer","Header","classes","selector","state","isSignedIn","dispatch","toolbar","iconButtons"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,qCAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,+BAA9B;AACA,SAAQC,IAAR,QAAmB,wBAAnB;AAEA,MAAMC,SAAS,GAAGjB,UAAU,CAAC,OAAO;AAClCkB,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GAD4B;AAIlCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,eAAe,EAAE,MADZ;AAELC,IAAAA,KAAK,EAAE;AAFF,GAJyB;AAQlCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE,QADD;AAEPC,IAAAA,QAAQ,EAAE,IAFH;AAGPC,IAAAA,KAAK,EAAE;AAHA,GARyB;AAalCC,EAAAA,WAAW,EAAE;AACXH,IAAAA,MAAM,EAAE;AADG,GAbqB;AAgBlCI,EAAAA,OAAO,EAAE;AAhByB,CAAP,CAAD,CAA5B;;AAsBA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AACA,QAAMc,QAAQ,GAAGjB,WAAW,CAAEkB,KAAD,IAAWA,KAAZ,CAA5B;AACA,QAAMC,UAAU,GAAGlB,aAAa,CAACgB,QAAD,CAAhC;AACA,QAAMG,QAAQ,GAAGrB,WAAW,EAA5B;AAEA,sBACG;AAAK,IAAA,SAAS,EAAEiB,OAAO,CAACZ,IAAxB;AAAA,2BACO,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAC,OAAjB;AAAyB,MAAA,SAAS,EAAEY,OAAO,CAACV,OAA5C;AAAA,6BACI,QAAC,OAAD;AAAS,QAAA,SAAS,EAAEU,OAAO,CAACK,OAA5B;AAAA,gCACI;AAAK,UAAA,GAAG,EAAC,MAAT;AAAgB,UAAA,GAAG,EAAEvB,IAArB;AAA2B,UAAA,KAAK,EAAC,OAAjC;AAAyC,UAAA,IAAI,EAAC,QAA9C;AAAuD,UAAA,SAAS,EAAEgB,OAAlE;AAA2E,UAAA,OAAO,EAAE,MAAMM,QAAQ,CAAClB,IAAI,CAAC,GAAD,CAAL;AAAlG;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKiB,UAAU,iBACP;AAAK,UAAA,SAAS,EAAEH,OAAO,CAACM;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADP;AAAA;AAAA;AAAA;AAAA,UADH;AAeD,CArBD;;GAAMP,M;UACYZ,S,EACCH,W,EAEAD,W;;;KAJbgB,M;AAuBN,eAAeA,MAAf","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport logo from '../../assets/img/src/icons/logo.png'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getIsSignedIn } from '../../reducks/users/selectors';\nimport {push} from 'connected-react-router'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuBar: {\n      backgroundColor: \"#fff\",\n      color: '#444',\n  },\n  toolBar: {\n    margin: '0 auto',\n    maxWidth: 1024,\n    width: '100%'\n  },\n  IconButtons: {\n    margin: '0 0 0 auto'\n  },\n  pointer: {\n    \n  }\n}));\n\n\nconst Header = () => {\n  const classes = useStyles()\n  const selector = useSelector((state) => state)\n  const isSignedIn = getIsSignedIn(selector)\n  const dispatch = useDispatch();\n\n  return(\n     <div className={classes.root}>\n            <AppBar position=\"fixed\" className={classes.menuBar}>\n                <Toolbar className={classes.toolbar}>\n                    <img alt=\"Logo\" src={logo} width=\"128px\" role=\"button\" className={pointer} onClick={() => dispatch(push('/'))}/>\n                    {isSignedIn && (\n                        <div className={classes.iconButtons}>\n                            \n                        </div>\n                    )}\n                </Toolbar>\n            </AppBar>\n           \n        </div>\n  )\n}\n\nexport default Header"]},"metadata":{},"sourceType":"module"}