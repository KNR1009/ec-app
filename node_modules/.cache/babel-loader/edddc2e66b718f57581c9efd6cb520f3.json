{"ast":null,"code":"import { CardElement } from '@stripe/react-stripe-js';\nconst headers = new Headers();\nheaders.set('Content-type', 'application/json');\nconst BASE_URL = \"https://ec-app-8ba0b.web.app/\";\n\nconst createCustomer = async (email, paymentMehotdId, uid) => {\n  const response = await fetch(BASE_URL + 'v1/customer', {\n    method: 'POST',\n    headers: headers,\n    body: JSON.stringify({})\n  });\n};\n\nexport const registerCard = (stripe, elements) => {\n  return async (dispatch, getState) => {\n    const user = getState().users;\n    const email = user.email;\n    const uid = user.id;\n    const username = user.name;\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    } // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n\n\n    const cardElement = elements.getElement(CardElement); // Use your card Element with other Stripe.js APIs\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement\n    });\n\n    if (error) {\n      console.log('error');\n      return;\n    }\n\n    const paymentMehotdId = paymentMethod.id;\n    const customerData = await createCustomer(email, paymentMehotdId, uid);\n  };\n};","map":{"version":3,"sources":["/Users/itoukazunari/Desktop/ec-app/src/reducks/payments/operations.js"],"names":["CardElement","headers","Headers","set","BASE_URL","createCustomer","email","paymentMehotdId","uid","response","fetch","method","body","JSON","stringify","registerCard","stripe","elements","dispatch","getState","user","users","id","username","name","cardElement","getElement","error","paymentMethod","createPaymentMethod","type","card","console","log","customerData"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,yBAA1B;AAEA,MAAMC,OAAO,GAAG,IAAIC,OAAJ,EAAhB;AACAD,OAAO,CAACE,GAAR,CAAY,cAAZ,EAA4B,kBAA5B;AACA,MAAMC,QAAQ,GAAG,+BAAjB;;AAEA,MAAMC,cAAc,GAAG,OAAMC,KAAN,EAAaC,eAAb,EAA8BC,GAA9B,KAAsC;AACzD,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,QAAQ,GAAG,aAAZ,EAA2B;AACrDO,IAAAA,MAAM,EAAE,MAD6C;AAErDV,IAAAA,OAAO,EAAEA,OAF4C;AAGrDW,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EAAf;AAH+C,GAA3B,CAA5B;AAOH,CARD;;AAUA,OAAO,MAAMC,YAAY,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AAChD,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA6B;AAClC,UAAMC,IAAI,GAAGD,QAAQ,GAAGE,KAAxB;AACA,UAAMf,KAAK,GAAEc,IAAI,CAACd,KAAlB;AACA,UAAME,GAAG,GAAGY,IAAI,CAACE,EAAjB;AACA,UAAMC,QAAQ,GAAGH,IAAI,CAACI,IAAtB;;AAEA,QAAI,CAACR,MAAD,IAAW,CAACC,QAAhB,EAA0B;AACxB;AACA;AACA;AACD,KAViC,CAYlC;AACA;AACA;;;AACA,UAAMQ,WAAW,GAAGR,QAAQ,CAACS,UAAT,CAAoB1B,WAApB,CAApB,CAfkC,CAiBlC;;AACA,UAAM;AAAC2B,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAyB,MAAMZ,MAAM,CAACa,mBAAP,CAA2B;AAC9DC,MAAAA,IAAI,EAAE,MADwD;AAE9DC,MAAAA,IAAI,EAAEN;AAFwD,KAA3B,CAArC;;AAKA,QAAIE,KAAJ,EAAW;AACTK,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA;AACD;;AAED,UAAM1B,eAAe,GAAGqB,aAAa,CAACN,EAAtC;AACA,UAAMY,YAAY,GAAG,MAAM7B,cAAc,CAACC,KAAD,EAAQC,eAAR,EAAyBC,GAAzB,CAAzC;AAED,GA/BD;AAgCD,CAjCM","sourcesContent":["import {CardElement} from '@stripe/react-stripe-js';\n\nconst headers = new Headers();\nheaders.set('Content-type', 'application/json');\nconst BASE_URL = \"https://ec-app-8ba0b.web.app/\"\n\nconst createCustomer = async(email, paymentMehotdId, uid) => {\n    const response = await fetch(BASE_URL + 'v1/customer', {\n      method: 'POST',\n      headers: headers,\n      body: JSON.stringify({\n        \n      })\n    })\n}\n\nexport const registerCard = (stripe, elements) => {\n  return async (dispatch, getState)=> {\n    const user = getState().users;\n    const email= user.email\n    const uid = user.id\n    const username = user.name\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    }\n\n    // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n    const cardElement = elements.getElement(CardElement);\n\n    // Use your card Element with other Stripe.js APIs\n    const {error, paymentMethod} = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement,\n    });\n\n    if (error) {\n      console.log('error')\n      return\n    } \n\n    const paymentMehotdId = paymentMethod.id;\n    const customerData = await createCustomer(email, paymentMehotdId, uid)\n    \n  }\n}"]},"metadata":{},"sourceType":"module"}