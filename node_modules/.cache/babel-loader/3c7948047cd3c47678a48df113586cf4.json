{"ast":null,"code":"import { db, FirebaseTimestamp } from \"../../firebase/index\";\nimport { push } from \"connected-react-router\";\nconst productsRef = db.collection(\"products\");\nexport const saveProduct = (id, name, description, category, gender, price, sizes, images) => {\n  return async dispatch => {\n    const timestamp = FirebaseTimestamp.now();\n    const data = {\n      category: category,\n      description: description,\n      gender: gender,\n      images: images,\n      name: name,\n      price: parseInt(price, 10),\n      sizes: sizes,\n      updated_at: timestamp\n    };\n\n    if (id === \"\") {\n      const ref = productsRef.doc();\n      data.created_at = timestamp;\n      id = ref.id;\n      data.id = id;\n    }\n\n    return productsRef.doc(id).set(data, {\n      merge: true\n    }).then(() => {\n      dispatch(push(\"/\"));\n    }).catch(error => {\n      throw new Error(error);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/itoukazunari/Desktop/ec-app/src/reducks/products/operations.js"],"names":["db","FirebaseTimestamp","push","productsRef","collection","saveProduct","id","name","description","category","gender","price","sizes","images","dispatch","timestamp","now","data","parseInt","updated_at","ref","doc","created_at","set","merge","then","catch","error","Error"],"mappings":"AAAA,SAASA,EAAT,EAAaC,iBAAb,QAAsC,sBAAtC;AACA,SAASC,IAAT,QAAqB,wBAArB;AAEA,MAAMC,WAAW,GAAGH,EAAE,CAACI,UAAH,CAAc,UAAd,CAApB;AAEA,OAAO,MAAMC,WAAW,GAAG,CACzBC,EADyB,EAEzBC,IAFyB,EAGzBC,WAHyB,EAIzBC,QAJyB,EAKzBC,MALyB,EAMzBC,KANyB,EAOzBC,KAPyB,EAQzBC,MARyB,KAStB;AACH,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,SAAS,GAAGd,iBAAiB,CAACe,GAAlB,EAAlB;AAEA,UAAMC,IAAI,GAAG;AACXR,MAAAA,QAAQ,EAAEA,QADC;AAEXD,MAAAA,WAAW,EAAEA,WAFF;AAGXE,MAAAA,MAAM,EAAEA,MAHG;AAIXG,MAAAA,MAAM,EAAEA,MAJG;AAKXN,MAAAA,IAAI,EAAEA,IALK;AAMXI,MAAAA,KAAK,EAAEO,QAAQ,CAACP,KAAD,EAAQ,EAAR,CANJ;AAOXC,MAAAA,KAAK,EAAEA,KAPI;AAQXO,MAAAA,UAAU,EAAEJ;AARD,KAAb;;AAWA,QAAIT,EAAE,KAAK,EAAX,EAAe;AACb,YAAMc,GAAG,GAAGjB,WAAW,CAACkB,GAAZ,EAAZ;AACAJ,MAAAA,IAAI,CAACK,UAAL,GAAkBP,SAAlB;AACAT,MAAAA,EAAE,GAAGc,GAAG,CAACd,EAAT;AACAW,MAAAA,IAAI,CAACX,EAAL,GAAUA,EAAV;AACD;;AAED,WAAOH,WAAW,CACfkB,GADI,CACAf,EADA,EAEJiB,GAFI,CAEAN,IAFA,EAEM;AAAEO,MAAAA,KAAK,EAAE;AAAT,KAFN,EAGJC,IAHI,CAGC,MAAM;AACVX,MAAAA,QAAQ,CAACZ,IAAI,CAAC,GAAD,CAAL,CAAR;AACD,KALI,EAMJwB,KANI,CAMGC,KAAD,IAAW;AAChB,YAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD,KARI,CAAP;AASD,GA9BD;AA+BD,CAzCM","sourcesContent":["import { db, FirebaseTimestamp } from \"../../firebase/index\";\nimport { push } from \"connected-react-router\";\n\nconst productsRef = db.collection(\"products\");\n\nexport const saveProduct = (\n  id,\n  name,\n  description,\n  category,\n  gender,\n  price,\n  sizes,\n  images\n) => {\n  return async (dispatch) => {\n    const timestamp = FirebaseTimestamp.now();\n\n    const data = {\n      category: category,\n      description: description,\n      gender: gender,\n      images: images,\n      name: name,\n      price: parseInt(price, 10),\n      sizes: sizes,\n      updated_at: timestamp,\n    };\n\n    if (id === \"\") {\n      const ref = productsRef.doc();\n      data.created_at = timestamp;\n      id = ref.id;\n      data.id = id;\n    }\n\n    return productsRef\n      .doc(id)\n      .set(data, { merge: true })\n      .then(() => {\n        dispatch(push(\"/\"));\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n  };\n};"]},"metadata":{},"sourceType":"module"}