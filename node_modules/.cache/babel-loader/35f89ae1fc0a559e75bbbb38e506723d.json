{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getIsSignedIn } from './reducks/users/selectors';\nimport { useEffect } from 'react';\nimport { listenAuthState } from './reducks/users/operations';\nexport const Auth = ({\n  children\n}) => {\n  _s();\n\n  const dispatch = useDispatch(); // storeの状態を取得\n\n  const selector = useSelector(state => state); // store内部のログイン状態の確認\n\n  const isSignedIn = getIsSignedIn(selector);\n  useEffect(() => {\n    if (!isSignedIn) {\n      dispatch(listenAuthState());\n    }\n  }, []);\n\n  if (!isSignedIn) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  } else {\n    return children;\n  }\n};\n\n_s(Auth, \"I1e6xWLg+kqrhUy4QEVy0hYKLSU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/itoukazunari/Desktop/ec-app/src/Auth.jsx"],"names":["React","useSelector","useDispatch","getIsSignedIn","useEffect","listenAuthState","Auth","children","dispatch","selector","state","isSignedIn"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,eAAT,QAAgC,4BAAhC;AAGA,OAAO,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAElC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B,CAFkC,CAGlC;;AACA,QAAMO,QAAQ,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAZ,CAA5B,CAJkC,CAKlC;;AACA,QAAMC,UAAU,GAAGR,aAAa,CAACM,QAAD,CAAhC;AAEAL,EAAAA,SAAS,CAAC,MAAI;AACV,QAAG,CAACO,UAAJ,EAAe;AACbH,MAAAA,QAAQ,CAACH,eAAe,EAAhB,CAAR;AACD;AACJ,GAJQ,EAIN,EAJM,CAAT;;AAMA,MAAG,CAACM,UAAJ,EAAe;AACb,wBAAO,qCAAP;AACD,GAFD,MAEM;AACJ,WAAOJ,QAAP;AACD;AACF,CAnBM;;GAAMD,I;UAEMJ,W,EAEAD,W;;;KAJNK,I;AAqBb,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getIsSignedIn } from './reducks/users/selectors'\nimport { useEffect } from 'react';\nimport { listenAuthState } from './reducks/users/operations';\n\n\nexport const Auth = ({children}) => {\n\n  const dispatch = useDispatch()\n  // storeの状態を取得\n  const selector = useSelector((state) => state);\n  // store内部のログイン状態の確認\n  const isSignedIn = getIsSignedIn(selector)\n\n  useEffect(()=>{\n      if(!isSignedIn){\n        dispatch(listenAuthState())\n      }\n  }, [])\n\n  if(!isSignedIn){\n    return <></>\n  }else {\n    return children\n  }\n}\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}