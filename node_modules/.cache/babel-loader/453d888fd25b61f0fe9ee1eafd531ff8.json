{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/itoukazunari/Desktop/ec-app/src/componets/payment/PaymentEdit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { PrimaryButton, TextDetail, GreyButton } from \"../UIkit/index\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { registerCard, retrievePaymentMethod } from '../../reducks/payments/operations';\nimport { getCustomerId, getPaymentMethodId, getUserId } from \"../../reducks/users/selectors\";\n\nconst PaymentEdit = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const stripe = useStripe();\n  const elements = useElements();\n  const selector = useSelector(state => state);\n  const customerId = getCustomerId(selector);\n  const paymentmethodId = getPaymentMethodId(selector); // 登録カード情報を格納するstate\n\n  const [card, setState] = useState({});\n  useEffect(() => {\n    async () => {\n      const cardData = await retrievePaymentMethod(paymentmethodId);\n\n      if (cardData) {\n        console.log(cardData);\n      }\n    };\n  }, []); // カード情報を登録するメソット\n\n  const register = useCallback(() => {\n    dispatch(registerCard(stripe, elements));\n  }, [stripe, elements]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"c-section-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"u-text__headline u-text-center\",\n      children: \"\\u30AF\\u30EC\\u30B8\\u30C3\\u30C8\\u30AB\\u30FC\\u30C9\\u60C5\\u5831\\u306E\\u767B\\u9332\\u30FB\\u7DE8\\u96C6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"module-spacer--medium\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u73FE\\u5728\\u767B\\u9332\\u3055\\u308C\\u3066\\u3044\\u308B\\u30AB\\u30FC\\u30C9\\u60C5\\u5831\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"module-spacer--medium\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextDetail, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {\n      options: {\n        style: {\n          base: {\n            fontSize: '16px',\n            color: '#424770',\n            '::placeholder': {\n              color: '#aab7c4'\n            }\n          },\n          invalid: {\n            color: '#9e2146'\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"module-spacer--medium\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"u-text-center\",\n      children: [/*#__PURE__*/_jsxDEV(PrimaryButton, {\n        label: \"カード情報を登録\",\n        onClick: () => register()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"module-spacer--small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(GreyButton, {\n        label: \"マイページに戻る\",\n        onClick: () => {\n          dispatch(push('/user/mypage'));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaymentEdit, \"a0XDOOsBA/XjVTOkE4hkF3UVZ5w=\", false, function () {\n  return [useDispatch, useStripe, useElements, useSelector];\n});\n\n_c = PaymentEdit;\nexport default PaymentEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentEdit\");","map":{"version":3,"sources":["/Users/itoukazunari/Desktop/ec-app/src/componets/payment/PaymentEdit.jsx"],"names":["React","useCallback","useEffect","useState","CardElement","useStripe","useElements","PrimaryButton","TextDetail","GreyButton","useDispatch","useSelector","push","registerCard","retrievePaymentMethod","getCustomerId","getPaymentMethodId","getUserId","PaymentEdit","dispatch","stripe","elements","selector","state","customerId","paymentmethodId","card","setState","cardData","console","log","register","style","base","fontSize","color","invalid"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\nimport {CardElement, useStripe, useElements} from '@stripe/react-stripe-js';\nimport {PrimaryButton, TextDetail, GreyButton} from \"../UIkit/index\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { push } from 'connected-react-router'\nimport { registerCard, retrievePaymentMethod } from '../../reducks/payments/operations'\n\nimport { getCustomerId, getPaymentMethodId, getUserId} from \"../../reducks/users/selectors\";\n\n\nconst PaymentEdit = () => {\n  const dispatch = useDispatch();\n  const stripe = useStripe();\n  const elements = useElements();\n  const selector = useSelector(state => state);\n  const customerId = getCustomerId(selector);\n  const paymentmethodId = getPaymentMethodId(selector);\n\n  \n\n  // 登録カード情報を格納するstate\n  const [card, setState] = useState({});\n  \n  useEffect(()=>{\n\n    (async()=>{\n      const cardData = await retrievePaymentMethod(paymentmethodId)\n      if(cardData){\n        console.log(cardData)\n      }\n    })\n  },[])\n\n  // カード情報を登録するメソット\n  const register = useCallback(() => {\n      dispatch(registerCard(stripe, elements))\n  }, [stripe, elements])\n  \n  return(\n    <section className=\"c-section-container\">\n      <h2 className=\"u-text__headline u-text-center\">\n        クレジットカード情報の登録・編集\n      </h2>\n      <div className=\"module-spacer--medium\"></div>\n      <h3>現在登録されているカード情報</h3>\n      <div className=\"module-spacer--medium\"></div>\n      <TextDetail />\n      <CardElement\n            options={{\n              style: {\n                base: {\n                  fontSize: '16px',\n                  color: '#424770',\n                  '::placeholder': {\n                    color: '#aab7c4',\n                  },\n                },\n                invalid: {\n                  color: '#9e2146',\n                },\n              },\n            }}\n    />\n    <div className=\"module-spacer--medium\"></div>\n    <div className=\"u-text-center\">\n       <PrimaryButton label={\"カード情報を登録\"} \n       onClick={()=>register()}/>\n       <div className=\"module-spacer--small\" />\n       <GreyButton label={\"マイページに戻る\"} \n       onClick={()=>{dispatch(push('/user/mypage'))}}/>\n    </div>\n    </section>\n  )\n}\n\nexport default PaymentEdit"]},"metadata":{},"sourceType":"module"}