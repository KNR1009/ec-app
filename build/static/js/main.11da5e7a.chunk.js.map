{"version":3,"sources":["reducks/users/actions.js","reducks/store/initialState.js","reducks/users/reducers.js","reducks/products/actions.js","reducks/products/reducers.js","reducks/users/selectors.js","firebase/index.js","firebase/config.js","reducks/users/operations.js","componets/UIkit/TextInput.jsx","componets/UIkit/PrimaryButton.jsx","componets/UIkit/SelectBox.jsx","componets/UIkit/GreyButton.jsx","componets/UIkit/TextDetail.jsx","templates/SignUp.jsx","templates/SignIn.jsx","templates/Rest.jsx","reducks/products/operations.js","componets/Producuts/ImageArea.jsx","componets/Producuts/ImagePreview.jsx","componets/Producuts/SetSizesArea.jsx","assets/img/src/no_image.png","componets/Producuts/ProductCard.jsx","componets/Producuts/ImageSwiper.jsx","componets/Producuts/SizeTable.jsx","componets/Producuts/CartListItem .jsx","componets/Producuts/OrderHistoryItem.jsx","componets/Producuts/OrderProducts.jsx","templates/ProductEdit.jsx","reducks/products/selectors.js","templates/ProductList.jsx","templates/ProductDetail.jsx","templates/CartList.jsx","templates/OrderConfirm.jsx","templates/OrderHistory.jsx","templates/UserMyPage.jsx","reducks/payments/operations.js","reducks/store/store.js","componets/payment/PaymentEdit.jsx","templates/CheckoutWrapper.jsx","Auth.jsx","Router.jsx","assets/img/src/icons/logo.png","componets/header/Header.jsx","componets/header/HeaderMenu.jsx","componets/header/CloseableDrawer.jsx","App.jsx","reportWebVitals.js","assets/theme.js","index.js"],"names":["FETCH_ORDER_HISTORY","FETCH_PRODUCTS_IN_CART","fetchProductsInCartAction","products","type","payload","SIGN_IN","signInAction","userState","isSignedIn","role","uid","username","email","SIGN_OUT","UPDARE_USER_STATE","initialState","list","users","cart","orders","UserReducer","state","action","Actions","FETCH_PRODUCTS","DELETE_PRODUCTS","ProductsReducer","usersSelector","getIsSignedIn","createSelector","getProductsInCart","getOrderHistory","getUserId","getUsername","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","storage","FirebaseTimestamp","functions","Timestamp","signOut","dispatch","a","then","push","TextInput","props","TextField","fullWidth","label","margin","multiline","required","rows","value","onChange","useStyles","makeStyles","button","backgroundColor","color","fontSize","height","marginBottom","width","PrimaryButton","classes","Button","className","variant","onClick","theme","formControl","minWidth","SelectBox","FormControl","InputLabel","Select","e","select","target","options","map","MenuItem","id","name","marginButton","row","display","flexFlow","marginLeft","marginRight","fontWeight","TextDetail","SignUp","useDispatch","useState","setEmail","password","setPassword","confirmPassword","setConfirmPassword","setUsername","inputEmail","useCallback","inputPassword","inputConfirmPassword","inputUsername","alert","createUserWithEmailAndPassword","result","user","timestamp","now","userInitialData","customer_id","created_at","updated_at","collection","doc","set","signUp","Option","styled","div","SignIn","signInWithEmailAndPassword","get","snapshot","data","signIn","Rest","sendPasswordResetEmail","catch","restPassword","productsRef","ImageArea","images","deleteImage","window","confirm","newImages","filter","image","setImages","ref","child","delete","uploadImage","event","file","files","blob","Blob","S","fileName","Array","from","crypto","getRandomValues","Uint32Array","n","length","join","uploadTask","put","getDownloadURL","downloadURL","newImage","path","prevState","IconButton","ImagePreview","alt","src","iconCell","padding","checkIcon","float","SetSizesArea","index","setIndex","size","setSize","quantity","setQuantity","inputSize","inputQuantity","addSize","sizes","setSizes","newSizes","useEffect","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","item","editSize","deleteIndex","deleteSize","root","breakpoints","down","up","content","textAlign","justifyContent","paddingBottom","media","paddingTop","cursor","opacity","pointer","price","palette","secondary","dark","productName","boxOrient","lineHeight","overflow","lineClamp","ProductCard","toLocaleString","NoImage","React","anchorEl","setAnchorEl","handleClose","Card","CardMedia","CardContent","Typography","currentTarget","Menu","keepMounted","open","Boolean","onClose","getState","nextProducts","product","ImageSwiper","pagination","el","clickable","dynamicBullets","navigation","nextEl","prevEl","loop","spaceBetween","params","SizeTable","icon","addProduct","objectFit","text","CartListItem","selector","useSelector","ListItem","ListItemAvatar","ListItemText","primary","removeProductFromCart","cartId","Divider","OrderHistoryItem","datetimeTostring","dt","getFullYear","getMonth","getDate","order","updated","toDate","shipping","shipping_date","total","amount","Object","keys","OrderProducts","gtToProductPage","List","key","btn","ProductEdit","location","pathname","split","setName","description","setDescription","category","setCategory","categories","setCategories","gender","setGender","setPrice","inputName","inputDescription","inputPrice","orderBy","snapshots","forEach","parseInt","merge","error","Error","saveProduct","getProducts","ProductList","query","router","search","test","where","productList","fetchProducts","sliderBox","detail","ProductDetail","setProduct","selectedSize","addedProduct","added_at","productId","cartRef","HTMLReactParser","replace","usestyles","maxWidth","CartList","productsInCart","goToOrder","backToTop","GreyButton","detailBox","orderBox","border","borderRadius","boxShadow","OrderConfirm","subtotal","useMemo","reduce","sum","shippingFee","tax","userRef","soldOutProducts","batch","updateSizes","update","errormessage","commit","orderRef","date","shippingDate","fromDate","Date","setDate","history","orderProduct","orderList","background","grey","OrderHistory","UserMyPage","headers","Headers","createCustomer","paymentMethodId","fetch","BASE_URL","method","body","JSON","stringify","paymentMethod","userId","response","json","customerResponse","parse","PaymentEdit","stripe","useStripe","elements","useElements","register","console","cardElement","getElement","CardElement","createPaymentMethod","card","log","customerData","updateUserState","payment_method_id","registerCard","style","base","invalid","stripePromise","loadStripe","CheckoutWrapper","Auth","children","onAuthStateChanged","Router","exact","flexGrow","menuBar","toolBar","iconButtons","Header","sideBarOpen","setSideBarOpen","handleDrawerToggle","isOpen","AppBar","position","Toolbar","logo","HeaderMenu","unsubscribe","onSnapshot","docChanges","change","findIndex","Badge","badgeContent","createStyles","drawer","flexShrink","toolbar","mixins","drawerPaper","searchField","alignItems","CloseableDrawer","container","searchKeyword","setKeyword","inputSearchKeyword","selectMenu","func","filters","setFilters","menus","Drawer","anchor","paper","ModalProps","menu","ListItemIcon","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","light","main","contrastText","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","History","store","reduxCreateStore","combineReducers","connectRouter","applyMiddleware","routerMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11da5e7a.chunk.js","sourcesContent":["// 注文履歴を保存する¥\nexport const FETCH_ORDER_HISTORY = \"FETCH_ORDER_HISTORY\";\nexport const fetchOrderHistoryAction = (history) => {\n    return {\n        type: \"FETCH_ORDER_HISTORY\",\n        payload: history\n    }\n}\n\n\n\n// カートの変更をこちらに記載する\nexport const FETCH_PRODUCTS_IN_CART = \"FETCH_PRODUCTS_IN_CART\";\nexport const fetchProductsInCartAction = (products) => {\n    return {\n        type: \"FETCH_PRODUCTS_IN_CART\",\n        payload: products\n    }\n}\n\nexport const SIGN_IN = \"SIGN_IN\";\nexport const signInAction = (userState) => {\n  return {\n    type: \"SIGN_IN\",\n    payload: {\n      isSignedIn: true,\n      role: userState.role,\n      uid: userState.uid,\n      username: userState.username,\n      email: userState.email\n    },\n  };\n};\n\n// ログアウトした時のアクション\nexport const SIGN_OUT = \"SIGN_OUT\";\nexport const signOutAction = () => {\n  return {\n    type: \"SIGN_OUT\",\n    payload: {\n      isSignedIn: false,\n      uid: \"\",\n      username: \"\",\n    },\n  };\n};\n\n// クレジットカード情報の変更\nexport const UPDARE_USER_STATE = \"UPDARE_USER_STATE\";\nexport const updateUserStateAction = (userState) => {\n  return {\n    type: \"UPDARE_USER_STATE\",\n    payload: userState\n  };\n};\n","// こちらにstateの初期状態を記述する\n\nconst initialState = {\n  products:{\n    list:[]\n  },\n  users: {\n    cart: [],\n    email:\"\",\n    isSignedIn: false,\n    orders:[],\n    role: \"\",\n    uid: \"\",\n    username: \"\"\n  },\n};\n\nexport default initialState","import * as Actions from './actions'\nimport initialState from '../store/initialState'\n\nexport const UserReducer = (state=initialState.users, action) => {\n  switch(action.type){\n    case Actions.FETCH_ORDER_HISTORY:\n      return{\n        ...state,\n        orders: [...action.payload]\n      };\n    case Actions.SIGN_IN:\n      return{\n        ...state,\n        ...action.payload\n      };\n    case Actions.UPDARE_USER_STATE:\n      return{\n        ...state,\n        ...action.payload\n      };\n    case Actions.SIGN_OUT:\n      return {\n        ...action.payload\n      };\n    case Actions.FETCH_PRODUCTS_IN_CART:\n       return {\n        ...state,\n        cart: [...action.payload]\n      };\n    default:\n      return state\n  }\n}","export const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\nexport const fetchProductsAction = (products) => {\n  return{\n    type: \"FETCH_PRODUCTS\",\n    payload: products\n  }\n}\n\nexport const DELETE_PRODUCTS = \"DELETE_PRODUCTS\";\nexport const deleteProductsAction = (products) => {\n  return{\n    type: \"DELETE_PRODUCTS\",\n    payload: products\n  }\n}","import * as Actions from \"./actions\";\nimport initialState from \"../store/initialState\";\n\nexport const ProductsReducer = (state = initialState.products, action) => {\n      switch(action.type){\n        case Actions.FETCH_PRODUCTS:\n          return{\n            ...state,\n            list: [...action.payload]\n          };\n        case Actions.DELETE_PRODUCTS:\n          return {\n            ...state,\n            list:[...action.payload]\n          }\n        default:\n          return state\n      }\n};\n","import {createSelector} from \"reselect\";\n\nconst usersSelector = (state) => state.users;\n\nexport const getIsSignedIn = createSelector(\n  [usersSelector],\n  state => state.isSignedIn\n);\n\nexport const getProductsInCart = createSelector(\n  [usersSelector],\n  state => state.cart\n)\n\nexport const getOrderHistory = createSelector(\n  [usersSelector],\n  state => state.orders\n)\n\n\nexport const getUserId = createSelector(\n  [usersSelector],\n  state => state.uid\n);\n\n\n\nexport const getUsername = createSelector([usersSelector], (state) => state.username);","// エントリーポイント\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/storage'\nimport 'firebase/functions'\nimport {firebaseConfig} from \"./config\";\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const db = firebase.firestore();\nexport const storage = firebase.storage();\nexport const functions = firebase.functions();\n// サーバーから現在の時刻を取得する\nexport const FirebaseTimestamp = firebase.firestore.Timestamp;","export const firebaseConfig = {\n  apiKey: \"AIzaSyBVvFshyc_SOlhZfSILWfFrfdH_JkacveE\",\n  authDomain: \"ec-app-8ba0b.firebaseapp.com\",\n  databaseURL: \"https://ec-app-8ba0b.firebaseio.com\",\n  projectId: \"ec-app-8ba0b\",\n  storageBucket: \"ec-app-8ba0b.appspot.com\",\n  messagingSenderId: \"1035628322919\",\n  appId: \"1:1035628322919:web:a284bcb26c4b671cc3f4c2\",\n  measurementId: \"G-3EX2HY12MS\"\n};\n\n","import {signInAction, fetchProductsInCartAction, fetchOrderHistoryAction} from \"./actions\";\nimport {push} from 'connected-react-router';\nimport {auth, FirebaseTimestamp ,db} from '../../firebase/index'\nimport { useDispatch } from \"react-redux\";\n\n\n\n// カートに追加するオペレーションを作成する\nexport const addProductToCart = (addedProduct) => {\n    return async (dispatch, getState) => {\n        const uid = getState().users.uid;\n        const cartRef = db.collection('users').doc(uid).collection('cart').doc()\n        addedProduct['cartId'] = cartRef.id;\n        await cartRef.set(addedProduct);\n        dispatch(push('/'))\n    }\n}\n\nexport const fetchProductsInCart = (products) => {\n  return async(dispatch) => {\n    dispatch(fetchProductsInCartAction(products))\n  }\n}\n\n\n// 注文履歴を取得するオペレーション\nexport const fetchOrderHistory = () => {\n  return async(dispatch, getState) => {\n      // 現在のログインユーザーの取得\n      const uid = getState().users.uid;\n      const list = []\n      // firebaseへアクセスして注文履歴の取得\n      db.collection('users').doc(uid)\n      .collection('orders')\n      .orderBy('updated_at', 'desc')\n      .get()\n      .then((snapshots) => {\n        snapshots.forEach(snapshot => {\n          const data = snapshot.data()\n          list.push(data)\n        })\n        dispatch(fetchOrderHistoryAction(list))\n      })\n  }\n}\n\n// 認証リッスン\nexport const listenAuthState = () =>{\n\n  // redux-thunkを利用定型文\n  return async (dispatch) =>{\n    return auth.onAuthStateChanged(user =>{\n      // 認証されていた場合はstateを変更\n      if(user){   \n        const uid = user.uid;\n        db.collection(\"users\")\n          .doc(uid)\n          .get()\n          .then((snapshot) => {\n            const data = snapshot.data();\n\n            // 以下でアクションを呼び出しsiginの処理を行う\n            dispatch(\n              signInAction({\n                customer_id: (data.customer_id) ? data.customer_id : \"\",\n                email: data.email,\n                isSignedIn: true,\n                role: data.role,\n                uid: uid,\n                username: data.username,\n              })\n            );\n          });\n\n      }else{\n        dispatch(push('/signIn'))\n      }\n    })\n  }\n}\n\n// ログイン\nexport const signIn = (email, password) => {\n  const dispatch = useDispatch;\n  // コールバック関数を返り値として持つようにする\n  return async(dispatch) => {\n    // バリデーションを行う\n    if ( email === \"\" || password === \"\") {\n      alert(\"必須項目が未入力です\");\n      return false;\n    }\n    \n    auth.signInWithEmailAndPassword(email, password).then((result) => {\n      const user = result.user;\n\n      // ユーザが存在すれば処理にすすむ\n      if (user) {\n        const uid = user.uid;\n        db.collection(\"users\")\n          .doc(uid)\n          .get()\n          .then((snapshot) => {\n            const data = snapshot.data();\n\n            // 以下でアクションを呼び出しsiginの処理を行う\n            dispatch(\n              signInAction({\n                customer_id: (data.customer_id) ? data.customer_id : \"\",\n                email: data.email,\n                isSignedIn: true,\n                role: data.role,\n                uid: uid,\n                username: data.username,\n              })\n            );\n\n            dispatch(push(\"/\"));\n          });\n      }\n    });\n\n  }\n\n  // 上記の記述を先ほどのLoginコンポーネントのクリック時のイベントで発火するようにする\n}\n\n// ログアウト\n\nexport const signOut = () => {\n  return async (dispatch) => {\n    auth.signOut()\n    .then(()=>{\n      dispatch(push('/'))\n    })\n  }\n}\n\n// パスワードを再設定\nexport const restPassword = (email) => {\n  return async (dispatch) => {\n    // バリデーションを行う\n    if (email === \"\" ) {\n      alert(\"必須項目が未入力です\");\n      return false;\n    }else{\n      auth.sendPasswordResetEmail(email)\n      .then(()=>{\n        alert('入力されたメールにパスワードリセット用のメールを送りました')\n        dispatch(push('/signin'))\n      }).catch(()=>{\n          alert('パスワードリセットに失敗しました')\n      })\n    }\n  }\n}\n\n// 新規登録\nexport const signUp = (username, email, password, confirmPassword) => {\n  return async (dispatch) => {\n    // Validations\n    \n      // バリデーションを行う\n      if (username === \"\" || email === \"\" || password === \"\") {\n        alert(\"必須項目が未入力です\");\n        return false;\n      }\n\n      if (password !== confirmPassword) {\n        alert(\"パスワードが一致しません。もう一度お試しください\");\n        return false;\n      }\n    \n\n    return auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((result) => {\n        const user = result.user;\n        if (user) {\n          const uid = user.uid;\n          const timestamp = FirebaseTimestamp.now();\n\n          const userInitialData = {\n            customer_id: \"\",\n            created_at: timestamp,\n            email: email,\n            role: \"customer\",\n            uid: uid,\n            updated_at: timestamp,\n            username: username,\n          };\n          db.collection(\"users\")\n            .doc(uid)\n            .set(userInitialData)\n            .then(() => {\n              dispatch(push(\"/\"));\n            });\n          \n          \n        }\n      })\n      \n  };\n};","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nconst  TextInput = (props) => {\n    return (\n      <TextField\n        fullWidth={props.fullWidth}\n        label={props.label}\n        margin=\"dense\"\n        multiline={props.multiline}\n        required={props.required}\n        rows={props.rows}\n        value={props.value}\n        type={props.type}\n        onChange={props.onChange}\n      />\n    );\n}\nexport default TextInput","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/styles\";\n\n// ボタンのスタイルを変更する\n\nconst useStyles = makeStyles({\n  button: {\n    backgroundColor: \"#4dd0e1\",\n    color: \"#000\",\n    fontSize: 16,\n    height: 48,\n    marginBottom: 16,\n    width: 256,\n  },\n});\n\nconst PrimaryButton = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Button\n      className={classes.button}\n      variant=\"contained\"\n      onClick={() => props.onClick()}\n    >\n      {props.label}\n    </Button>\n  );\n};\n\nexport default PrimaryButton;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    marginBottom: 16,\n    minWidth: 120,\n    width: \"100%\",\n  },\n}));\n\nconst SelectBox = (props) => {\n  const classes = useStyles();\n\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel>{props.label}</InputLabel>\n      <Select\n        value={props.value}\n        required={props.required}\n        onChange={(e) => props.select(e.target.value)}\n      >\n        {props.options.map((value) => {\n          return (\n            <MenuItem key={value.id} value={value.id}>\n              {value.name}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default SelectBox;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/styles\";\n\n// ボタンのスタイルを変更する\n\nconst useStyles = makeStyles({\n  button: {\n    backgroundColor: \"#CCCCCC\",\n    color: \"#000\",\n    fontSize: 16,\n    height: 48,\n    marginButton: 16,\n    width: 256,\n  },\n});\n\nconst PrimaryButton = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Button\n      className={classes.button}\n      variant=\"contained\"\n      onClick={() => props.onClick()}\n    >\n      {props.label}\n    </Button>\n  );\n};\n\nexport default PrimaryButton;\n","import React from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n    row: {\n        display: 'flex',\n        flexFlow: 'row wrap',\n        marginBottom: 16\n    },\n    label: {\n        marginLeft: 0,\n        marginRight: 'auto'\n    },\n    value: {\n        fontWeight: 600,\n        marginLeft: 'auto',\n        marginRight: 0\n    }\n})\n\nconst TextDetail = (props) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.row}>\n            <div className={classes.label}>{props.label}</div>\n            <div className={classes.value}>{props.value}</div>\n        </div>\n    );\n};\n\nexport default TextDetail;","import React, {useState, useCallback} from 'react'\nimport {TextInput, PrimaryButton} from '../componets/UIkit/index'\nimport { signUp } from '../reducks/users/operations'\nimport { useDispatch } from \"react-redux\";\n\nconst SignUp = ()=>{\n\n   const dispatch = useDispatch();\n\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [confirmPassword, setConfirmPassword] = useState(\"\")\n  const [username, setUsername] = useState(\"\")\n\n  const inputEmail = useCallback((e) => {\n    setEmail(e.target.value)\n  }, [setEmail]);\n\n  const inputPassword = useCallback((e) => {\n    setPassword(e.target.value)\n  }, [setPassword]);\n\n  const inputConfirmPassword = useCallback((e) => {\n    setConfirmPassword(e.target.value)\n  }, [setConfirmPassword]);\n\n  const inputUsername = useCallback((e) => {\n    setUsername(e.target.value)\n  }, [setUsername]);\n\n  return (\n    <div className=\"c-section-container\">\n      <h2 className=\"u-text-center u-text__headline\">アカウント登録</h2>\n      <div className=\"module-spacer--medium\"></div>\n\n      <TextInput\n        fullWidth={true}\n        label={\"ユーザー名\"}\n        multiline={false}\n        required={true}\n        rows={1}\n        value={username}\n        type={\"text\"}\n        onChange={inputUsername}\n      />\n      <TextInput\n        fullWidth={true}\n        label={\"メールアドレス\"}\n        multiline={false}\n        required={true}\n        rows={1}\n        value={email}\n        type={\"email\"}\n        onChange={inputEmail}\n      />\n      <TextInput\n        fullWidth={true}\n        label={\"パスワード\"}\n        multiline={false}\n        required={true}\n        rows={1}\n        value={password}\n        type={\"password\"}\n        onChange={inputPassword}\n      />\n      <TextInput\n        fullWidth={true}\n        label={\"パスワード確認\"}\n        multiline={false}\n        required={true}\n        rows={1}\n        value={confirmPassword}\n        type={\"password\"}\n        onChange={inputConfirmPassword}\n      />\n\n      <div className=\"module-spacer--medium\"></div>\n      <div className=\"center\">\n        <PrimaryButton\n          label={\"アカウントを登録する\"}\n          onClick={() =>\n            dispatch(signUp(username, email, password, confirmPassword))\n          }\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default SignUp","import React, { useState, useCallback } from \"react\";\nimport { TextInput, PrimaryButton } from \"../componets/UIkit/index\";\nimport { signIn } from \"../reducks/users/operations\";\nimport { useDispatch } from \"react-redux\";\nimport { push } from \"connected-react-router\";\nimport styled from \"@emotion/styled\";\n\nconst SignIn = () => {\n  const dispatch = useDispatch();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const inputEmail = useCallback(\n    (e) => {\n      setEmail(e.target.value);\n    },\n    [setEmail]\n  );\n\n  const inputPassword = useCallback(\n    (e) => {\n      setPassword(e.target.value);\n    },\n    [setPassword]\n  );\n\n  return (\n    <div className=\"c-section-container\">\n      <h2 className=\"u-text-center u-text__headline\">ログイン</h2>\n      <div className=\"module-spacer--medium\"></div>\n\n      <TextInput\n        fullWidth={true}\n        label={\"メールアドレス\"}\n        multiline={false}\n        required={true}\n        rows={1}\n        value={email}\n        type={\"email\"}\n        onChange={inputEmail}\n      />\n      <TextInput\n        fullWidth={true}\n        label={\"パスワード\"}\n        multiline={false}\n        required={true}\n        rows={1}\n        value={password}\n        type={\"password\"}\n        onChange={inputPassword}\n      />\n\n      <div className=\"module-spacer--medium\"></div>\n      <div className=\"center\">\n        <PrimaryButton\n          label={\"ログイン\"}\n          onClick={() => dispatch(signIn(email, password))}\n        />\n        <div className=\"module-spacer--medium\"></div>\n        <Option>\n          <p className=\"noaccount\" onClick={() => dispatch(push(\"/signup\"))}>\n            アカウントを持っていない方はこちら\n          </p>\n          <p\n            className=\"passwordrest\"\n            onClick={() => dispatch(push(\"/signin/reset\"))}\n          >\n            パスワードを忘れた方はこちら\n          </p>\n        </Option>\n      </div>\n    </div>\n  );\n};\n\nconst Option = styled.div`\n  p {\n    cursor: pointer;\n  }\n`;\n\nexport default SignIn;\n","import React, { useState, useCallback } from \"react\";\nimport { TextInput, PrimaryButton } from \"../componets/UIkit/index\";\nimport { restPassword } from '../reducks/users/operations'\nimport { useDispatch } from \"react-redux\";\nimport { push } from \"connected-react-router\";\n\nconst Rest = () => {\n  const dispatch = useDispatch();\n\n  const [email, setEmail] = useState(\"\");\n\n\n  const inputEmail = useCallback(\n    (e) => {\n      setEmail(e.target.value);\n    },\n    [setEmail]\n  );\n\n  return (\n    <div className=\"c-section-container\">\n      <h2 className=\"u-text-center u-text__headline\">パスワードを再設定</h2>\n      <div className=\"module-spacer--medium\"></div>\n\n      <TextInput\n        fullWidth={true}\n        label={\"メールアドレス\"}\n        multiline={false}\n        required={true}\n        rows={1}\n        value={email}\n        type={\"email\"}\n        onChange={inputEmail}\n      />\n\n      <div className=\"module-spacer--medium\"></div>\n      <div className=\"center\">\n        <PrimaryButton\n          label={\"パスワードをリセット\"}\n          onClick={() => dispatch(restPassword(email))}\n        />\n        <p onClick={() => dispatch(push(\"/login\"))}>\n          ログイン画面に戻る\n        </p>\n        \n      </div>\n    </div>\n  );\n};\n\nexport default Rest;\n","import { db, FirebaseTimestamp } from \"../../firebase/index\";\nimport { push } from \"connected-react-router\";\nimport {fetchProductsAction, deleteProductsAction} from \"./actions\"\n\n\nconst productsRef = db.collection(\"products\");\n\n\n// 商品を削除するメソット\nexport const deleteProduct = (id)=>{\n  return async(dispatch, getState) => {\n      productsRef.doc(id).delete()\n      .then(()=>{\n          const prevState = getState().products.list;\n         const nextProducts = prevState.filter(product => product.id !== id)\n          dispatch(deleteProductsAction(nextProducts))\n      })\n  }\n}\n\n// firebaseから商品情報を取得\nexport const fetchProducts = (gender, category) => {\n  \n  return async(dispatch) => {\n\n      let query = productsRef.orderBy('updated_at', 'desc');\n        query = (gender !== \"\") ? query.where('gender', '==', gender) : query;\n        query = (category !== \"\") ? query.where('category', '==', category) : query;\n\n\n      query.get().then(snapshots => {\n          const productList = []\n          snapshots.forEach(snapshot => {\n            const product = snapshot.data();\n            productList.push(product);\n          })\n          dispatch(fetchProductsAction(productList))\n      })\n  }\n}\n\n// カート商品の注文の処理\nexport const orderProduct = (productsInCart, price) => {\n    return async(dispatch, getState) => {\n\n      const uid = getState().users.uid; // 現在のログインユーザーの取得\n      const userRef = db.collection('users').doc(uid) // 現在のログインユーザーのfirebase情報取得\n      const timestamp = FirebaseTimestamp.now() // 現在時刻の取得\n\n      let products = {}; // カートの商品を一旦格納する\n      let soldOutProducts = []; // 売り切れ商品\n\n      const batch = db.batch();\n\n      // カート内の商品1つ1つに対して処理を行う\n      for(const product of productsInCart){\n        const snapshot = await  productsRef.doc(product.productId).get(); // カート内の商品idの取得\n        const sizes = snapshot.data().sizes; // firebaseのproductコレクションからsize情報を取得\n\n        // sizeのオブジェクトの個数を減らす処理\n        const updateSizes = sizes.map(size => {\n          // カート商品と一致している場合\n          if(size.size === product.size){\n            //  カート内部に入れている間に商品が購入された時の処理\n             if (size.quantity === 0){\n                soldOutProducts.push(product.name);\n                return size\n             }\n            //  新しいサイズのオブジェクトを作成\n             return{\n               size: size.size,\n               quantity: size.quantity - 1\n             }\n          }else{\n            // 個数の変更はなくそのまま返す\n            return size\n          }\n        });\n        // 注文履歴を残す\n        products[product.productId] = {\n              id: product.productId,\n              images: product.images,\n              name: product.name,\n              price: product.price,\n              size: product.size\n          };\n\n        // バッチ処理を記述する\n         batch.update(\n          productsRef.doc(product.productId),\n            {sizes:updateSizes}\n        )\n\n        batch.delete(\n          userRef.collection('cart').doc(product.cartId)\n        )\n      }\n\n       //  在庫がない商品が存在した場合は処理を起こさない\n      //  for文の外で実装を行う\n        if(soldOutProducts.length > 0) {\n          const errormessage = (soldOutProducts.length > 1) ? \n            soldOutProducts.join('と') :\n            soldOutProducts[0];\n          alert('大変申し訳ございません' + errormessage + 'は在庫切れとなったため注文処理を中断しました')\n          return false\n        }else{\n            // 先ほどのbatch処理を全て行う\n          batch.commit()\n            .then(()=>{\n              // firebaseに注文履歴を残す\n                const orderRef = userRef.collection('orders').doc();\n                const date = timestamp.toDate();\n                // Calculate shipping date which is the date after 3 days\n                const shippingDate = FirebaseTimestamp.fromDate(new Date(date.setDate(date.getDate() + 3)));\n\n                const history = {\n                  amount: price,\n                  created_at: timestamp,\n                  id: orderRef.id,\n                  products: products,\n                  shipping_date: shippingDate,\n                  updated_at: timestamp\n                }\n\n                // 全てが完了したら上記を保存して、注文確認ページへpush\n                orderRef.set(history);\n                dispatch(push('/'))\n\n            }).catch(()=>{\n              alert('注文処理に失敗しました。通信環境もご確認の、もう一度お試しください')\n            })\n        }\n    }\n}\n\nexport const saveProduct = (\n  id,\n  name,\n  description,\n  category,\n  gender,\n  price,\n  images,\n  sizes\n) => {\n  return async (dispatch) => {\n    const timestamp = FirebaseTimestamp.now();\n\n      const data = {\n        category: category,\n        description: description,\n        gender: gender,\n        images: images,\n        name: name,\n        price: parseInt(price, 10),\n        updated_at: timestamp,\n        sizes:sizes\n      }\n\n      if (id === \"\") {\n            const ref = productsRef.doc()\n            data.created_at = timestamp;\n            id = ref.id;\n            data.id = id;\n        }\n\n     return productsRef.doc(id).set(data, {merge: true})\n            .then(() => {\n                dispatch(push('/'))\n            }).catch((error) => {\n                throw new Error(error)\n            })\n    \n  };\n};","import React, { useCallback } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\nimport {storage} from '../../firebase/index'\nimport {ImagePreview} from \"./index\";\n\nconst ImageArea = (props) => {\n\n  const images = props.images;\n\n  // 画像を削除するメソット\n\n\n    const deleteImage = useCallback( id => {\n        const ret = window.confirm('この画像を削除しますか？')\n        if (!ret) {\n            return false\n        } else {\n            const newImages = images.filter(image => image.id !== id)\n            props.setImages(newImages);\n            return storage.ref('images').child(id).delete()\n        }\n    }, [images])\n    \n\n  const uploadImage = useCallback((event) => {\n        const file = event.target.files;\n        let blob = new Blob(file, { type: \"image/jpeg\" });\n\n        // Generate random 16 digits strings\n        const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n        const N=16;\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n)=>S[n%S.length]).join('')\n\n        const uploadRef = storage.ref('images').child(fileName);\n        const uploadTask = uploadRef.put(blob);\n\n        uploadTask.then(() => {\n            // Handle successful uploads on complete\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\n                const newImage = {id: fileName, path: downloadURL};\n                props.setImages((prevState => [...prevState, newImage]))\n                \n            });\n        }).catch(() => {\n            \n        });\n    }, [props.setImages])\n\n  return (\n    <div>\n      <div className=\"p-grid__list-images\">\n          {images.length > 0 && (\n              images.map(image => <ImagePreview id={image.id} path={image.path} key={image.id} delete={deleteImage}/> )\n          )}\n      </div>\n      <div className=\"u-text-right\">\n      <span>商品画像を登録する</span>\n      <IconButton>\n        <label>\n          <AddPhotoAlternateIcon />\n          <input\n            className=\"u-display-none\"\n            type=\"file\"\n            id=\"image\"\n            onChange={(event) => uploadImage(event)}\n          />\n        </label>\n      </IconButton>\n    </div>\n    </div>\n  );\n}\nexport default ImageArea","import React from 'react';\n\nconst ImagePreview = (props) => {\n\n    return (\n        <div className=\"p-media__thumb\" >\n            <img alt=\"アイキャッチ画像\" src={props.path} \n            onClick={()=> props.delete(props.id) }/>\n        </div>\n    );\n};\n\nexport default ImagePreview;\n","import React, {useCallback, useEffect, useState} from 'react';\nimport {TextInput} from \"../UIkit\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {makeStyles} from \"@material-ui/styles\";\n\n\nconst useStyles = makeStyles({\n  iconCell:{\n    height:48,\n    width:48,\n    padding:0\n  },\n  checkIcon: {\n      float: 'right'\n  },\n})\n\nconst SetSizesArea = (props) => {\n  const classes = useStyles();\n\n  const [index, setIndex] = useState(0);\n  const [size, setSize] = useState(\"\");\n  const [quantity, setQuantity] = useState(0);\n\n  const inputSize = useCallback((event) => {\n    setSize(event.target.value)\n  }, [setSize])\n\n  const inputQuantity = useCallback((event) => {\n    setQuantity(event.target.value)\n  }, [setQuantity])\n\n  // サイズと数量のstateを変更するメソット\n  const addSize = useCallback((index, size, quantity)=>{\n      if(size === \"\" || quantity === \"\"){\n        return false;\n      }else{\n        // 新規追加の場合\n        if(index === props.sizes.length){\n          props.setSizes(prevState => [...prevState, {size: size, quantity: quantity}])\n          setIndex(index + 1);\n          setSize(\"\");\n          setQuantity(0);\n        }else{\n          // indexと配列数が一致していない場合なので編集の時\n          const newSizes = props.sizes;\n          newSizes[index] = {size:size, quantity:quantity}\n          props.setSizes(newSizes)\n          // 初期値に値を戻す\n          setIndex(newSizes.length);\n          setSize(\"\");\n          setQuantity(0);\n        }\n      \n      }\n  })  \n\n  // サイズと数量を編集\n  const editSize = (index, size, quantity) => {\n        setIndex(index);\n        setSize(size);\n        setQuantity(quantity);\n  }\n\n  // 削除する際の実装\n  const deleteSize = (deleteIndex) => {\n        const newSizes = props.sizes.filter((item, index) => index !== deleteIndex)\n        props.setSizes(newSizes);\n    }\n\n  // 編集が行われた場合にindexを修正する\n  const memoIndex = useEffect(()=>{\n    setIndex(props.sizes.length);\n  }, [props.sizes.length])\n\n  return(\n    <div>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>サイズ</TableCell>\n              <TableCell>数量</TableCell>\n              <TableCell className={classes.iconCell}></TableCell>\n              <TableCell className={classes.iconCell}></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {props.sizes.length > 0 && (\n              props.sizes.map((item, index) => (\n                  <TableRow key={item.size}>\n                  <TableCell>{item.size}</TableCell>\n                  <TableCell>{item.quantity}</TableCell>\n                  <TableCell className={classes.iconCell}>\n                    <IconButton className={classes.iconCell} onClick={()=>editSize(index, item.size, item.quantity)}>\n                    <EditIcon />\n                    </IconButton>\n                  </TableCell>\n                  <TableCell className={classes.iconCell}>\n                    <IconButton className={classes.iconCell} onClick={()=> deleteSize(index)}>\n                    <DeleteIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))\n            )}\n          </TableBody>\n        </Table>\n        <div>\n        <TextInput\n          fullWidth={false}\n          label={\"サイズ\"}\n          multiline={false}\n          required={true}\n          rows={1}\n          value={size}\n          type={\"text\"}\n          onChange={inputSize}\n        />\n        <TextInput\n          fullWidth={false}\n          label={\"数量\"}\n          multiline={false}\n          required={true}\n          rows={1}\n          value={quantity}\n          type={\"number\"}\n          onChange={inputQuantity}\n        />\n        </div>\n        <IconButton className={classes.checkIcon} onClick={() => addSize(index, size, quantity)}>\n          <CheckCircleIcon/>\n        </IconButton>\n      </TableContainer >\n    </div>\n\n  )\n}\n\nexport default SetSizesArea","export default __webpack_public_path__ + \"static/media/no_image.1a2d0029.png\";","import React , { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport NoImage from '../../assets/img/src/no_image.png'\nimport {useDispatch} from 'react-redux';\nimport {push} from 'connected-react-router'\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {deleteProduct} from '../../reducks/products/operations'\n\n\n// スタイルと整える\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        [theme.breakpoints.down('sm')]: {\n            margin: 8,\n            width: 'calc(50% - 16px)'\n        },\n        [theme.breakpoints.up('md')]: {\n            margin: 16,\n            width: 'calc(33.3333% - 32px)'\n        }\n    },\n    content: {\n        display: 'flex',\n        padding: '16 8',\n        textAlign: 'left',\n        justifyContent: 'space-between',\n        '&:last-child': {\n            paddingBottom: 16\n        }    \n    },\n    // icon: {\n    //     marginRight: 0,\n    //     marginLeft: 'auto'\n    // },\n    media: {\n        height:0,\n        paddingTop: '100%',\n        // width:'100%',\n        cursor:'pointer',\n        // overflow: 'hidden',\n        '&:hover': {\n        opacity: 0.6,\n        // transition:'1s all',\n        // // transform:'scale(1.1)'  \n        \n    }  \n        \n    },\n    pointer:{\n      cursor:'pointer',\n    },\n    price: {\n        color: theme.palette.secondary.dark,\n        fontSize: 16\n    },\n    productName: {\n        boxOrient: 'vertical',\n        display: '-webkit-box',\n        fontSize: 14,\n        lineHeight: '18px',\n        overflow: 'hidden',\n        [theme.breakpoints.down('sm')]: {\n            height: 36,\n            lineClamp: 2,\n        },\n        [theme.breakpoints.up('md')]: {\n            height: 18,\n            lineClamp: 1,\n        }\n    }\n}));\n\n\nconst ProductCard = (props) => {\n  const price = props.price.toLocaleString();\n  const dispatch = useDispatch();\n\n  // 画像の取得\n  const images = (props.images.length > 0) ? props.images : [NoImage]\n  const classes = useStyles();\n\n\n  // メニューの開閉状態\n   const [anchorEl, setAnchorEl] = React.useState(null);\n   const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n   const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n\n\n  return(\n    <Card className={classes.root}>\n      <CardMedia\n        className={classes.media}\n        image={images[0].path}\n        onClick={()=>dispatch(push('/product/' + props.id))}\n      />\n      <CardContent className={classes.content}>\n         <div onClick={()=>dispatch(push('/product/' + props.id))} className={classes.pointer}>\n           <Typography color=\"textSecondary\" component=\"p\">\n           {props.name}\n         </Typography>  \n         <Typography component=\"p\" className={classes.price}>\n           ¥{price}\n         </Typography>  \n         </div>\n         <IconButton onClick={handleClick}>\n             <MoreVertIcon />\n         </IconButton>\n         <Menu\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n         >\n           <MenuItem onClick={()=>{dispatch(push(\"/product/edit/\" + props.id)) \n          handleClose()\n          }}>\n             編集する\n           </MenuItem>\n           <MenuItem \n           onClick={()=>{\n             dispatch(deleteProduct(props.id))\n             handleClose()\n           }}> \n             削除する\n           </MenuItem>\n        </Menu>\n      </CardContent >\n    </Card>\n  )\n}\n\nexport default ProductCard;","import React from 'react';\nimport Swiper from 'react-id-swiper';\nimport NoImage from '../../assets/img/src/no_image.png'\nimport 'swiper/css/swiper.css'\n\nconst ImageSwiper = (props) => {\n    const [params] = React.useState({\n        pagination: {\n            el: '.swiper-pagination',\n            type: 'bullets',\n            clickable: true,\n            dynamicBullets: true\n        },\n        navigation: {\n            nextEl: '.swiper-button-next',\n            prevEl: '.swiper-button-prev'\n        },\n        loop: true,\n        spaceBetween: 30\n    })\n\n    const images = props.images\n\n    return (\n        <Swiper {...params}>\n            {images.length === 0 ? (\n                <div className=\"p-media__thumb\">\n                    <img src={NoImage} alt=\"No Image\"/>\n                </div>\n            ) : (\n                images.map(image => (\n                    <div className=\"p-media__thumb\" key={image.id}>\n                        <img src={image.path} alt=\"商品画像\"/>\n                    </div>\n                ))\n            )}\n        </Swiper>\n    );\n};\n\nexport default ImageSwiper;","import React from 'react';\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport {makeStyles} from \"@material-ui/styles\";\n\nconst useStyles = makeStyles({\n  iconCell: {\n    height: 48,\n    width: 48,\n  },\n  \n})\n\n\n\nconst SizeTable = (props) => {\n  const sizes = props.sizes;\n  const classes = useStyles();\n\n  return(\n    <TableContainer>\n     <Table>\n      <TableBody>\n        {sizes.length > 0 && (\n          sizes.map(size => (\n            <TableRow key={size.size}>\n              <TableCell>{size.size}</TableCell>\n              <TableCell>残り{size.quantity}点</TableCell>\n              <TableCell className={classes.icon}>\n                  {size.quantity > 0 ? (\n                  <IconButton>\n                    <ShoppingCartIcon onClick={()=>props.addProduct(size.size)}/>\n                  </IconButton>\n                  ): (\n                      <div>売り切れ</div>\n                  )}\n              </TableCell>\n              <TableCell className={classes.icon}>\n                <IconButton>\n                  <FavoriteBorderIcon />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          ))\n        )}\n      </TableBody>\n     </Table>\n  </TableContainer  >\n  )\n}\n\nexport default SizeTable;","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport {makeStyles} from \"@material-ui/styles\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {useSelector} from \"react-redux\";\nimport {getUserId} from \"../../reducks/users/selectors\";\nimport {db} from \"../../firebase/index\"\n\nconst useStyles = makeStyles((theme)=>({\n    list:{\n      height: 128,\n    },\n    image: {\n      objectFit: 'cover',\n      margin: 16,\n      height: 96,\n      width: 96\n    },\n    text:{\n      width: '100%'\n    }\n}))\n\nconst CartListItem  = (props) => {\n  const classes = useStyles()\n  const selector = useSelector((state) => state)\n\n  // 金額に対してカンマを付与する\n  const price = props.product.price.toLocaleString();\n\n  // 削除ボタンを押した時の変更処理を記述\n  const removeProductFromCart = (id) => {\n      const uid = getUserId(selector)\n      return db.collection('users').doc(uid).collection('cart').doc(id).delete();\n  }\n\n  return(\n    <>\n      <ListItem className={classes.list}>\n        <ListItemAvatar>\n          <img src={props.product.images[0].path} alt=\"\" className={classes.image}/>\n        </ListItemAvatar>\n        <div className={classes.text}>\n           <ListItemText primary={props.product.name} secondary={'サイズ : '+ props.product.size}/>\n           <ListItemText primary={'¥' + price} />\n        </div>\n        <IconButton onClick={()=>{ removeProductFromCart(props.product.cartId)}}>\n          <DeleteIcon />\n        </IconButton>\n      </ListItem>\n       <Divider />\n    </>\n  )\n}\n\nexport default CartListItem ","import React, {useEffect} from 'react'\nimport Divider from \"@material-ui/core/Divider\";\n// import {OrderedProducts} from \"./index\";\n// import {datetimeToString, dateToString} from \"../../function/common\";\nimport {TextDetail} from \"../UIkit\";\nimport {OrderProducts} from '../Producuts/index'\n\nconst OrderHistoryItem = (props) => {\n\n  // 注文した日時を取得して変換する関数\nconst datetimeTostring = (dt) => {\n    return dt.getFullYear() + '年'\n        + ((dt.getMonth()+1)) + '月'\n        + (dt.getDate()) + '日'\n        \n};\n  \n  const order = props.order;\n  const updated = datetimeTostring(order.updated_at.toDate())\n  const shipping = datetimeTostring(order.shipping_date.toDate())\n  const total = '¥' + order.amount.toLocaleString()\n  const products = props.order.products\n\n\n\n\n  return(\n    <div>\n      <div className=\"module-spacer--small\" />\n        <TextDetail label={'注文ID'} value={order.id}></TextDetail>\n        <TextDetail label={'注文日時'} value={updated}></TextDetail>\n        <TextDetail label={'発送日'} value={shipping}></TextDetail>\n        <TextDetail label={'注文合計'} value={total}></TextDetail>\n         {Object.keys(products).length > 0 && (\n            <OrderProducts products={products}/>\n            )}\n        <div className=\"module-spacer--extra-extra-small\" />\n        <Divider />\n    </div>\n  )\n}\n\nexport default OrderHistoryItem;","import React, {useCallback, useEffect} from 'react';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport {PrimaryButton} from \"../UIkit\";\nimport {useDispatch} from \"react-redux\";\nimport {push} from \"connected-react-router\"\n\nconst useStyles = makeStyles((theme) =>({\n  image: {\n        objectFit: 'cover',\n        margin: '8px 16px 8px 0',\n        height: 96,\n        width: 96\n    },\n  list:{\n      backgroundColor: '#fff',\n      height: 'auto'\n  },\n  text:{\n      width: '100%',\n  }\n}))\n\nconst OrderProducts = (props) => {\n  const products = props.products;\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  \n  // 商品詳細ページに遷移させるメソットの作成\n  const gtToProductPage = useCallback((id)=>{\n        dispatch(push('/product/' + id))\n  },[])\n\n \n   return (\n        <List>\n            {Object.keys(products).map(key => {\n                const product = products[key]\n\n\n                return (\n                    <>\n                        <ListItem className={classes.list} key={product.id}>\n                            <ListItemAvatar>\n                                <img className={classes.image} src={product.images[0].path} alt=\"商品のTOP画像\" />\n                            </ListItemAvatar>\n                            <div className={classes.text}>\n                                <ListItemText primary={product.name} secondary={\"サイズ：\" + product.size} />\n                                <ListItemText primary={\"¥\"+product.price.toLocaleString()} />\n                            </div>\n                           <div>\n                              <PrimaryButton label={\"商品詳細を見る\"} onClick={()=>{gtToProductPage(product.id)}}  \n                              className={classes.btn}\n                              />\n                           </div>\n                        </ListItem>\n                        <Divider />\n                    </>\n                )\n            })}\n        </List>\n    );\n}\n\nexport default OrderProducts","import React, { useState, useCallback, useEffect } from 'react'\nimport { TextInput, PrimaryButton, SelectBox } from \"../componets/UIkit/index\";\nimport { saveProduct } from \"../reducks/products/operations\"\nimport { useDispatch } from 'react-redux';\nimport { ImageArea } from '../componets/Producuts/index'\nimport { db } from '../firebase';\nimport {SetSizesArea } from '../componets/Producuts/'\n\n\n  const ProductEdit = () => {\n\n  const dispatch = useDispatch();\n\n  // 商品の編集\n  let id = window.location.pathname.split('/product/edit')[1];\n  if(id !== \"\"){\n    id = id.split('/')[1]\n  }\n\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [gender, setGender] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [images, setImages] = useState([])\n  const [sizes, setSizes] = useState([])\n\n  // onchangeに引き渡すコールバック\n  const inputName = useCallback((event)=>{\n      setName(event.target.value)\n  }, [setName])\n\n  const inputDescription = useCallback((event)=>{\n    setDescription(event.target.value)\n  }, [setDescription])\n\n  const inputPrice = useCallback((event)=>{\n    setPrice(event.target.value)\n  }, [setPrice])\n\n\n  // カテゴリー用の連想配列\n  // const categories = [\n  //   {id: 'tops', name: \"トップス\"},\n  //   {id: \"shirts\", name:'シャツ'},\n  //   {id: 'pants', name: 'パンツ'}\n  // ]\n\n  // 性別の連想配列\n  const genders = [\n    { id: \"all\", name: \"すべて\" },\n    { id: \"male\", name: \"メンズ\" },\n    { id: \"female\", name: \"レディース\" },\n  ];\n\n    // idが一致する商品情報をrenderした際に取得\n  useEffect(()=>{\n    if(id !==  \"\"){\n      db.collection('products').doc(id).get().then(snapshot => {\n        const product = snapshot.data()\n        setName(product.name)\n        setDescription(product.description)\n        setImages(product.images)\n        setCategory(product.category)\n        setGender(product.gender)\n        setPrice(product.price)\n        setSizes(product.sizes)\n      })\n    }\n  }, [])\n\n  // カテゴリー一覧をfirebaseより取得\n  useEffect(()=>{\n    db.collection('categories')\n    .orderBy('order', 'asc')\n    .get()\n    .then((snapshots)=>{\n      const list = [];\n      snapshots.forEach(snapshot => {\n        const data = snapshot.data();\n        list.push({\n          id: data.id,\n          name: data.name\n        })\n      })\n      setCategories(list)\n    })\n  },[])\n\n\n  return (\n    <section>\n            <h2 className=\"u-text__headline u-text-center\">商品の登録・編集</h2>\n            <div className=\"c-section-container\">\n                <ImageArea images={images} setImages={setImages} />\n                <TextInput\n                    fullWidth={true} label={\"商品名\"} multiline={false} required={true}\n                    onChange={inputName} rows={1} value={name} type={\"text\"}\n                />\n                <TextInput\n                    fullWidth={true} label={\"商品説明\"} multiline={true} required={true}\n                    onChange={inputDescription} rows={5} value={description} type={\"text\"}\n                />\n                <SelectBox\n                    label={\"カテゴリー\"} options={categories} required={true} select={setCategory} value={category}\n                />\n                <SelectBox\n                    label={\"性別\"} options={genders} required={true} select={setGender} value={gender}\n                />\n                <TextInput\n                    fullWidth={true} label={\"価格\"} multiline={false} required={true}\n                    onChange={inputPrice} rows={1} value={price} type={\"number\"}\n                />\n\n                <div className=\"module-spacer--small\"/>\n                <SetSizesArea sizes={sizes} setSizes={setSizes} />\n                <div className=\"module-spacer--small\" />\n                <div className=\"center\">\n                    <PrimaryButton\n                        label={\"商品情報を保存\"}\n                        onClick={() => dispatch(saveProduct(id, name, description, category, gender, price, images, sizes ))}\n                    />\n                </div>\n            </div>\n        </section>\n  );\n}\nexport default ProductEdit;","import { createSelector } from \"reselect\";\n\nconst productsSelector = (state) => state.products;\n\nexport const getProducts = createSelector(\n    [productsSelector],\n    state => state.list\n);","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {ProductCard} from '../componets/Producuts'\nimport {fetchProducts} from '../reducks/products/operations'\nimport { ProductsReducer } from '../reducks/products/reducers';\nimport {getProducts} from '../reducks/products/selectors'\n\n\nconst ProductList = () => {\n  const dispatch = useDispatch();\n  const selector = useSelector((state) => state);\n  const products = getProducts(selector)\n\n  // クエリパラメタを取得する\n  const query = selector.router.location.search;\n  const gender = /^\\?gender=/.test(query) ? query.split('?gender=')[1] : \"\"\n  const category = /^\\?category=/.test(query) ? query.split(\"?category=\")[1]: \"\"\n\n  useEffect(()=>{\n      dispatch(fetchProducts(gender, category));\n  }, [query])\n\n\n  return(\n    <div className=\"c-section-wrapin\">\n      <div className=\"p-grid__row\">\n        {products.length > 0 && (\n          products.map(product => (\n            <ProductCard key={product.id} id={product.id} name={product.name} images={product.images} price={product.price}/>\n          )\n        ))\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default ProductList","import { makeStyles } from '@material-ui/styles';\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { db, FirebaseTimestamp } from '../firebase';\nimport HTMLReactParser from 'html-react-parser'\nimport {ImageSwiper, SizeTable} from '../componets/Producuts'\nimport { useDispatch } from 'react-redux';\nimport { addProductToCart } from '../reducks/users/operations'\n\nconst useStyles = makeStyles((theme) => ({\n    sliderBox: {\n        [theme.breakpoints.down('sm')]: {\n            margin: '0 auto 24px auto',\n            height: 320,\n            width: 320\n        },\n        [theme.breakpoints.up('sm')]: {\n            margin: '0 auto',\n            height: 400,\n            width: 400\n        },\n    },\n    detail: {\n        textAlign: 'left',\n        [theme.breakpoints.down('sm')]: {\n            margin: '0 auto 16px auto',\n            height: 320,\n            width: 320\n        },\n        [theme.breakpoints.up('sm')]: {\n            margin: '0 auto',\n            height: 'auto',\n            width: 400\n        },\n    },\n    price: {\n        fontSize: 36\n    },\n}))\n\n// 改行用のメソットを作成する\nconst returnCodeToBr = (text) => {\n  if(text==\"\"){\n    return text\n  }else{\n    return HTMLReactParser(text.replace(/\\r?\\n/g, '<br />'))\n  }\n}\n\nconst ProductDetail = ()=>{\n\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    let id = window.location.pathname.split('/product/')[1];\n    const [product, setProduct] = useState(null);\n\n    useEffect(() => {\n        db.collection('products').doc(id).get().then(doc => {\n            const data = doc.data()\n            setProduct(data)\n        })\n    },[])\n\n    // カートに商品を追加する処理(stateの値から取得)\n    const addProduct = useCallback((selectedSize) => {\n        const timestamp = FirebaseTimestamp.now()\n        dispatch(addProductToCart({\n            added_at: timestamp,\n            description: product.description,\n            gender: product.gender,\n            images: product.images,\n            name: product.name,\n            price: product.price,\n            productId: product.id,\n            quantity: 1,\n            size: selectedSize\n        }))\n    }, [product])\n\n\n    return(\n      <section className=\"c-section-wrapin\">\n            {product && (\n                <div className=\"p-grid__row\">\n                    <div className={classes.sliderBox}>\n                        <ImageSwiper \n                          images={product.images}\n                        />\n                    </div>\n                    <div className={classes.detail}>\n                        <h2 className=\"u-text__headline\">{product.name}</h2>\n                        <p className={classes.price}>¥{(product.price).toLocaleString()}</p>\n                        <div className=\"module-spacer--small\"/>\n                        <SizeTable sizes={product.sizes} addProduct={addProduct}/>\n                        <div className=\"module-spacer--small\"/>\n                        <p>{returnCodeToBr(product.description)}</p>\n                    </div>\n                </div>\n            )}\n        </section>\n    )\n}\n\nexport default ProductDetail;","import React, {useCallback} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport List from \"@material-ui/core/List\";\nimport {getProductsInCart} from \"../reducks/users/selectors\";\nimport { CartListItem } from '../componets/Producuts/index'\nimport { PrimaryButton, GreyButton } from '../componets/UIkit/index'\nimport {push} from 'connected-react-router'\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst usestyles = makeStyles(()=>({\n    root:{\n      margin: '0 auto',\n      maxWidth: 512,\n      width: '100%'\n\n    }\n}))\n\nconst CartList = () => {\n  const selector = useSelector((state) => state);\n  const productsInCart= getProductsInCart(selector)\n  const dispatch = useDispatch()\n  const classes = usestyles()\n\n  const goToOrder = useCallback(()=>{\n      dispatch(push('/order/confirm'))\n  }, [])\n\n  const backToTop = useCallback(()=>{\n      dispatch(push('/'))\n  })\n\n\n  return(\n    <section className=\"c-section-wrapin\">\n      <h2 className=\"u-text__headLine\">ショッピングカート\n      </h2>\n      <List className={classes.root}>\n          {productsInCart.length > 0 && (\n              productsInCart.map(product => <CartListItem product={product} key={product.cartId} />)\n          )}\n      </List>\n      <div className=\"module-spacer--medium\" />\n            <div className=\"p-grid__column\">\n                <PrimaryButton label={\"レジへ進む\"}   onClick={()=>goToOrder()}/>\n                <div className=\"module-spacer--extra-extra-small\"/>\n                <GreyButton label={\"ショッピングを続ける\"}  onClick={()=>backToTop()}/>\n      </div>\n    </section>\n  );\n}\n\nexport default CartList","import React, {useCallback, useMemo} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport List from \"@material-ui/core/List\";\nimport {getProductsInCart} from \"../reducks/users/selectors\";\nimport { CartListItem } from '../componets/Producuts/index'\nimport { PrimaryButton, GreyButton } from '../componets/UIkit/index'\nimport {push} from 'connected-react-router'\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport { TextDetail } from '../componets/UIkit/index'\nimport Divider from '@material-ui/core/Divider';\nimport { orderProduct } from '../reducks/products/operations'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  detailBox: {\n    margin: '0 atuo',\n    [theme.breakpoints.down('sm')]:{\n      width: 320\n    },\n    [theme.breakpoints.up('md')]:{\n      width: 512\n    }\n  },\n  orderBox:{\n    border: '1px solid rgba(0,0,0,0.2)',\n    borderRadius: '4px',\n    boxShadow: '0 4px 2px 2px rgba(0,0,0,0.2)',\n    height: 256,\n    margin: '24px auto 16px auto',\n    padding: 16,\n    width: 288\n\n\n  }\n}))\n\nconst OrderConfirm = () => {\n\n  // スタイルの定義\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  // storeのstateの商品情報の取得\n  const selector = useSelector((state)=> state);\n  const productsInCart = getProductsInCart(selector);\n\n  // 合計金額の計算\n  const subtotal = useMemo(() => {\n      return productsInCart.reduce((sum, product) => sum += product.price, 0)\n  }, [productsInCart])\n\n  // 送料の設定(1万円以上は無料)\n  const shippingFee = (subtotal >= 10000) ? 0 : 210;\n\n  // 税金\n  const tax = (subtotal) * 0.1\n  const total = subtotal + shippingFee + tax\n\n\n  // 注文ボタンがクリックされた際に呼び出される\n  const order = useCallback(()=>{\n    dispatch(orderProduct(productsInCart, total))\n  }, [productsInCart, total])\n\n  return(\n    <section className=\"c-section-wrapin\">\n      <h2 className=\"u-text__headline\">注文の確認</h2>\n      <div className=\"p-grid__row\">\n        <div className={classes.detailBox}>\n          <List> \n            {productsInCart.length > 0 && (\n                productsInCart.map(product => \n                  <CartListItem product={product} key={product.cartId}/>\n                  )\n            )\n            }\n          </List>\n        </div>\n        <div className={classes.orderBox}>\n          <TextDetail label={'商品合計'} value={'¥' + subtotal.toLocaleString() + '円'}/>\n          <TextDetail label={'消費税' + '円'} value={'¥' + tax+ '円'}/>\n          <TextDetail label={'送料'} value={'¥' + shippingFee + '円'}/>\n          < Divider />\n          <TextDetail label={'合計(税込み)'} value={'¥' + total.toLocaleString()+ '円'}/>\n          <PrimaryButton label={\"注文を確定\"}   onClick={()=>order()}/>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default OrderConfirm;","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport List from \"@material-ui/core/List\";\nimport {makeStyles} from \"@material-ui/styles\";\nimport { getOrderHistory } from '../reducks/users/selectors'\nimport { fetchOrderHistory } from '../reducks/users/operations'\nimport { OrderHistoryItem } from '../componets/Producuts'\n\nconst useStyles = makeStyles((theme) => ({\n    orderList: {\n        background: theme.palette.grey[\"100\"],\n        margin: '0 auto',\n        padding: 32,\n        [theme.breakpoints.down('sm')]: {\n            width: '100%'\n        },\n        [theme.breakpoints.up('md')]: {\n            width: 768\n        }\n    },\n}))\n\nconst OrderHistory = () => {\n    const classes = useStyles()\n    const selector = useSelector((state) => state);\n    const orders = getOrderHistory(selector)\n    const dispatch = useDispatch()\n  \n\n    // 注文履歴取得のメソット\n    useEffect(()=>{\n        dispatch(fetchOrderHistory())\n    }, [])\n\n    return(\n    <section className=\"c-section-wrapin\">\n            <List className={classes.orderList}>\n                {orders.length > 0 && (\n                    orders.map(order => <OrderHistoryItem order={order} key={order.id} />)\n                )}\n            </List>\n    </section>\n    )\n}\n\nexport default OrderHistory;","import React, {useCallback} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {PrimaryButton, TextDetail, GreyButton} from \"../componets/UIkit/index\";\nimport {getUsername} from \"../reducks/users/selectors\";\nimport {push} from \"connected-react-router\";\n\nconst UserMyPage = () => {\n  const dispatch = useDispatch();\n  const selector = useSelector((state)=>state);\n  const username = getUsername(selector);\n  return(\n    <section className=\"c-section-container\">\n      <h2 className=\"u-text__headline u-text-center\">マイページ</h2>\n      <div className=\"module-spacer--medium\"></div>\n      <TextDetail label={\"ユーザー名\"} value={username}/>\n      <div className=\"module-spacer--small\" />\n       <div className=\"u-text-center\">\n          <PrimaryButton label={\"カード情報の編集\"} onClick={()=>{dispatch(push('/user/payment/edit'))}}/> \n          <div className=\"module-spacer--small\" />\n          <GreyButton label={\"注文履歴の確認\"} onClick={()=>{dispatch(push('/order/history'))}}/> \n       </div>\n    </section>\n  )\n}\n\nexport default UserMyPage \n  ","import {CardElement} from '@stripe/react-stripe-js';\nimport { db, FirebaseTimestamp } from \"../../firebase/index\";\nimport { push } from \"connected-react-router\";\nimport { useDispatch } from 'react-redux';\nimport { updateUserStateAction } from '../users/actions'\n\n\n// Set Header\nconst headers = new Headers();\nheaders.set('Content-type', 'application/json');\nconst BASE_URL = \"https://ec-app-8ba0b.web.app\"\n\n// 新規登録を叩く\nconst createCustomer = async (email, paymentMethodId, uid) => {\n    const response = await fetch(BASE_URL + '/v1/customer', {\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify({\n            email: email,\n            paymentMethod: paymentMethodId,\n            userId: uid\n        })\n    });\n\n    const customerResponse = await response.json();\n    return JSON.parse(customerResponse.body);\n}\n\n\nexport const registerCard = (stripe, elements) => {\n  return async (dispatch, getState)=> {\n    // ログインユーザーの情報を取得する\n    const user = getState().users;\n    const email = user.email;\n    const uid = user.uid;\n\n    // 以下はバリデーションの定型分(コピペ)\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      console.error(\"Does not exist stripe or elements\");\n      return;\n    }\n\n    // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n\n    // 以下でカード情報を取得する\n    const cardElement = elements.getElement(CardElement);\n\n    // Use your card Element with other Stripe.js APIs\n     const {error, paymentMethod} = await stripe.createPaymentMethod({\n            type: 'card',\n            card: cardElement,\n        });\n\n    if (error) {\n      alert('error')\n      return;\n    } \n\n    // paymentメソットをトークン化したidを以下で取得する\n    const paymentMethodId = paymentMethod?.id;\n    console.log(email, paymentMethodId, uid)\n    \n    // APIを叩くメソットを呼び出す(メソットはreturnでJSON.parse(customerResponse.bodyを返していたので以下の変数に格納)\n   const customerData = await createCustomer(email, paymentMethodId, uid);\n\n    // 処理がうまくいっているのかの確認を行う\n    if(customerData.id === \"\"){\n      alert('カード情報の登録に失敗しました')\n      return;\n    }else{\n       const updateUserState = {\n          customer_id: customerData.id,\n          payment_method_id: paymentMethodId\n      }\n      db.collection('users').doc(uid)\n        .update(updateUserState)\n        .then(()=>{\n          dispatch(updateUserStateAction(updateUserState))\n          dispatch(push('/user/mypage'))\n        }).catch((error)=>{\n          // stripe側には顧客情報が保存されている\n          alert('firebaseでの登録に失敗しました')\n        })\n      }\n  }\n}","import {\n  createStore as reduxCreateStore, //store構築のモジュール\n  combineReducers, // 複数のReducerを結合するモジュール\n  applyMiddleware // routerで利用するミドルウェアa-ー\n} from 'redux';\n\n// ルーターをインポート\nimport {connectRouter, routerMiddleware} from \"connected-react-router\";\n\n// 非同期処理を制御するモジュール\nimport thunk from 'redux-thunk';\n\n// reducersをインポート(作成済み)\nimport {UserReducer} from '../users/reducers';\nimport {ProductsReducer} from '../products/reducers'\n\n\n// storeを作成\nexport default function createStore(history){\n  return reduxCreateStore( // storeの作成を行う\n    combineReducers({\n      router: connectRouter(history),\n      users: UserReducer,\n      products:ProductsReducer\n    }),\n    applyMiddleware(\n      routerMiddleware(history),\n      thunk\n    )\n  )\n}\n","import React, { useCallback } from 'react'\nimport {CardElement, useStripe, useElements} from '@stripe/react-stripe-js';\nimport {PrimaryButton, TextDetail, GreyButton} from \"../UIkit/index\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { push } from 'connected-react-router'\nimport { registerCard } from '../../reducks/payments/operations'\n\nimport { getUserId, getUsername} from \"../../reducks/users/selectors\";\n\n\nconst PaymentEdit = () => {\n  const dispatch = useDispatch();\n  const stripe = useStripe();\n  const elements = useElements();\n  const selector = useSelector(state => state);\n  const uid = getUserId(selector)\n  const username = getUsername(selector);\n  \n\n  // カード情報を登録するメソット\n  const register = useCallback(() => {\n      dispatch(registerCard(stripe, elements))\n  }, [stripe, elements])\n  \n  return(\n    <section className=\"c-section-container\">\n      <h2 className=\"u-text__headline u-text-center\">\n        クレジットカード情報の登録・編集\n      </h2>\n      <div className=\"module-spacer--medium\"></div>\n      <CardElement\n            options={{\n              style: {\n                base: {\n                  fontSize: '16px',\n                  color: '#424770',\n                  '::placeholder': {\n                    color: '#aab7c4',\n                  },\n                },\n                invalid: {\n                  color: '#9e2146',\n                },\n              },\n            }}\n    />\n    <div className=\"module-spacer--medium\"></div>\n    <div className=\"u-text-center\">\n       <PrimaryButton label={\"カード情報を登録\"} \n       onClick={()=>register()}/>\n       <div className=\"module-spacer--small\" />\n       <GreyButton label={\"マイページに戻る\"} \n       onClick={()=>{dispatch(push('/user/mypage'))}}/>\n    </div>\n    </section>\n  )\n}\n\nexport default PaymentEdit","import React from 'react';\nimport {loadStripe} from \"@stripe/stripe-js/pure\";\nimport {Elements} from \"@stripe/react-stripe-js\";\nimport {PaymentEdit} from \"../componets/payment\";\n\n\nconst stripePromise = loadStripe('pk_test_51Hvvt2HWpPeQiyZ0kRRcQvJCQXRLOCxlchdXJOzjEPqphASy3oMFEuVgVm3haFGTgll8vGybU6Gpu7CfIJ7h3sDT00zkWLDql9');\n\nconst CheckoutWrapper = () => {\n    return (\n        <Elements stripe={stripePromise}>\n            <PaymentEdit />\n        </Elements>\n    );\n};\nexport default CheckoutWrapper;","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getIsSignedIn } from './reducks/users/selectors'\nimport { useEffect } from 'react';\nimport { listenAuthState } from './reducks/users/operations';\n\n\nexport const Auth = ({children}) => {\n\n  const dispatch = useDispatch()\n  // storeの状態を取得\n  const selector = useSelector((state) => state);\n  // store内部のログイン状態の確認\n  const isSignedIn = getIsSignedIn(selector)\n\n  useEffect(()=>{\n      if(!isSignedIn){\n        dispatch(listenAuthState())\n      }\n  }, [])\n\n  if(!isSignedIn){\n    return <></>\n  }else {\n    return children\n  }\n}\n\n","import React from 'react'\nimport { Route, Switch } from \"react-router\";\nimport { Login, Home, SignUp, SignIn, Rest, ProductEdit, ProductList, ProductDetail, CartList, OrderConfirm, OrderHistory, UserMyPage, CheckoutWrapper } from \"./templates\";\nimport { Auth } from './Auth'\n\nconst Router = () => {\n\n  return (\n    <Switch>\n      <Route exact path=\"/signup\" component={SignUp} />\n      <Route exact path=\"/signin\" component={SignIn} />\n      <Route exact path=\"/signin/reset\" component={Rest} />\n\n      <Auth>\n        <Route exact path=\"(/)?\" component={ProductList} />\n        <Route path=\"/product/edit(/:id)?\" component={ProductEdit} />\n        <Route exact path=\"/product/:id\" component={ProductDetail} />\n        <Route exact path=\"/cart\" component={CartList} />\n        <Route exact path=\"/order/confirm\" component={OrderConfirm} />\n        <Route exact path=\"/order/history\" component={OrderHistory} />\n        <Route exact path=\"/user/mypage\" component={UserMyPage} />\n        <Route exact path=\"/user/payment/edit\" component={CheckoutWrapper} />\n      </Auth>\n    </Switch>\n  );\n};\n\nexport default Router","export default __webpack_public_path__ + \"static/media/logo.dc529f81.png\";","import React, {useCallback, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport logo from '../../assets/img/src/icons/logo.png'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getIsSignedIn } from '../../reducks/users/selectors';\nimport {push} from 'connected-react-router'\nimport {HeaderMenu ,CloseableDrawer} from './index'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuBar: {\n      backgroundColor: \"#fff\",\n      color: '#444',\n  },\n  toolBar: {\n    margin: '0 auto',\n    maxWidth: 1024,\n    width: '100%'\n  },\n  iconButtons: {\n      margin: '0 0 0 auto'\n  },\n  pointer: {\n    cursor: 'pointer'\n  }\n}));\n\n\n\nconst Header = () => {\n  const classes = useStyles()\n  const selector = useSelector((state) => state)\n  const isSignedIn = getIsSignedIn(selector)\n  const dispatch = useDispatch();\n\n  // 開閉メニューのpropsを作成\n\n const [sideBarOpen, setSideBarOpen] = useState(false);\n\n    const handleDrawerToggle = useCallback((event, isOpen) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n        setSideBarOpen(isOpen)\n    }, [setSideBarOpen]);\n\n\n  return(\n     <div className={classes.root}>\n            <AppBar position=\"fixed\" className={classes.menuBar}>\n                <Toolbar className={classes.toolBar}>\n                    <img alt=\"Logo\" src={logo} width=\"128px\" role=\"button\" className={classes.pointer} onClick={() => dispatch(push('/'))}/>\n                    {isSignedIn && (\n                        <div className={classes.iconButtons}>\n                            <HeaderMenu handleDrawerToggle ={handleDrawerToggle}/>\n                        </div>\n                    )}\n                </Toolbar>\n            </AppBar>\n            <CloseableDrawer \n              open={sideBarOpen}\n              onClose={handleDrawerToggle}\n            />\n           \n        </div>\n  )\n}\n\nexport default Header","import React, {useEffect} from 'react';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Badge} from \"@material-ui/core\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { getProductsInCart,  getUserId } from '../../reducks/users/selectors'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { db }  from '../../firebase/index'\nimport {fetchProductsInCart} from '../../reducks/users/operations'\nimport {push} from 'connected-react-router'\n\n  const HeaderMenu = (props) => {\n  const dispatch = useDispatch()\n  const selector = useSelector((state) => state);\n  const userId = getUserId(selector);\n  let productsInCart = getProductsInCart(selector);\n\n// Listen products in user's cart\n    useEffect(() => {\n        const unsubscribe = db.collection('users').doc(userId).collection('cart')\n            .onSnapshot(snapshots => {\n\n                snapshots.docChanges().forEach(change => {\n                    const product = change.doc.data();\n                    const changeType = change.type\n\n                    switch (changeType) {\n                        case 'added':\n                            productsInCart.push(product);\n                            break;\n                        case 'modified':\n                            const index = productsInCart.findIndex(product => product.cartId === change.doc.id)\n                            productsInCart[index] = product;\n                            break;\n                        case 'removed':\n                            productsInCart = productsInCart.filter(product => product.cartId !== change.doc.id);\n                            break;\n                        default:\n                            break;\n                    }\n                });\n\n                dispatch(fetchProductsInCart(productsInCart))\n            });\n\n        return () => unsubscribe()\n    },[]);\n\n  return(\n      <>\n        <IconButton  onClick={()=>dispatch(push('/cart'))}>\n          <Badge badgeContent={productsInCart.length} color=\"secondary\">\n          < ShoppingCartIcon />\n          </Badge>\n        </IconButton>\n        <IconButton  >\n          <FavoriteBorderIcon />\n        </IconButton>\n        <IconButton   onClick={(e) => props.handleDrawerToggle(e, true)}>\n          <MenuIcon />\n        </IconButton>\n      </>\n  )\n}\n\nexport default HeaderMenu","import React, { useCallback, useEffect, useState } from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {makeStyles, createStyles } from '@material-ui/core/styles';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport HistoryIcon from '@material-ui/icons/History';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport {TextInput} from \"../UIkit\";\nimport { useDispatch } from 'react-redux';\nimport {push} from 'connected-react-router'\nimport {signOut} from '../../reducks/users/operations'\nimport { db } from '../../firebase';\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        drawer: {\n            [theme.breakpoints.up('sm')]: {\n                width: 256, // drawerのアイコン\n                flexShrink: 0,\n            }\n        },\n        // necessary for content to be below app bar\n        toolbar: theme.mixins.toolbar,\n        drawerPaper: {\n            width: 256,\n        },\n       searchField: {\n            alignItems: 'center',\n            display: 'flex',\n            marginLeft: 32\n        }\n    }),\n);\n\nconst CloseableDrawer = (props) => {\n    const classes = useStyles();\n    const {container} = props;\n    const [searchKeyword, setKeyword] = useState(\"\")\n    const dispatch = useDispatch()\n\n    // テキスト入力のonchangeメソット\n    const inputSearchKeyword = useCallback((e)=>{\n        setKeyword(e.target.value);\n    }, [setKeyword])\n\n\n    // 配列に格納するメソットを作成する\n    const selectMenu = (event, path) => {\n         dispatch(push(path));\n         props.onClose(event)\n    }\n\n    // ここにカテゴリー分類を作成する\n    const [filters, setFilters] = useState([\n        {func: selectMenu, label: \"すべて\",    id: \"all\",    value: \"/\"              },\n        {func: selectMenu, label: \"メンズ\",    id: \"male\",   value: \"/?gender=male\"  },\n        {func: selectMenu, label: \"レディース\", id: \"female\", value: \"/?gender=female\"},\n    ])\n\n    const menus = [\n    {func: selectMenu, label: \"商品登録\",    icon: <AddCircleIcon/>, id: \"register\", value: \"/product/edit\"},\n    {func: selectMenu, label: \"注文履歴\",    icon: <HistoryIcon/>,   id: \"history\",  value: \"/order/history\"},\n    {func: selectMenu, label: \"プロフィール\", icon: <PersonIcon/>,    id: \"profile\",  value: \"/user/mypage\"},\n    ];\n\n    // firebaseからカテゴリーを取得する\n    useEffect(()=>{\n            db.collection(\"categories\")\n            .orderBy('order', 'asc')\n            .get()\n            .then((snapshots)=>{\n                const list = [];\n                snapshots.forEach((snapshot)=>{\n                    const data = snapshot.data();\n                    list.push({\n                        func: selectMenu, label: data.name,  id: data.id,  value: `/?category=${data.id}`\n                    })\n                })\n                // 取得したカテゴリーを入れる\n                setFilters(prevState => [...prevState, ...list])\n            })  \n    },[])\n\nreturn(\n<nav className=\"classes drawer\">\n    <Drawer\n        container={container}\n        variant=\"temporary\"\n        anchor={\"right\"}\n        open={props.open}\n        onClose={(e) => props.onClose(e, false)}\n        classes={{\n            paper: classes.drawerPaper,\n        }}\n        ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n        }}\n    >\n<div>\n    <div className={classes.searchField}>\n        <TextInput\n            fullWidth={false} label={\"キーワードを入力\"} multiline={false}\n            onChange={inputSearchKeyword} required={false} rows={1} value={searchKeyword} type={\"text\"}\n        />\n        <IconButton>\n            <SearchIcon />\n        </IconButton>\n    </div>\n        <Divider />\n        <List>\n        {menus.map(menu=>(\n            <ListItem button key={menu.id} onClick={(e)=>{menu.func(e, menu.value)}}\n            >\n                <ListItemIcon>\n                    {menu.icon}\n                </ListItemIcon>\n                    <ListItemText primary={menu.label}/>\n            </ListItem>\n        ))}\n        <ListItem button key=\"logout\" onClick={()=>dispatch(signOut())}>\n            <ListItemIcon>\n            <ExitToAppIcon />\n            </ListItemIcon>\n            <ListItemText primary={\"ログアウト\"}/>\n        </ListItem>\n        </List>\n        <Divider />\n        <List>\n            {filters.map(filter => (\n                <ListItem button key={filter.id} onClick={(e)=>{filter.func(e, filter.value)}}>\n                  <ListItemText primary={filter.label}/>\n                </ListItem>\n            ))}\n        </List>\n    \n</div>\n</Drawer>\n</nav>\n)\n}\n\nexport default CloseableDrawer","import React from 'react'\nimport Router from './Router'\nimport \"./assets/reset.css\"\nimport \"./assets/style.css\"\nimport {Header} from './componets/header'\n\nconst App = ()=>{\n    return(\n      <>\n       <Header />\n       <main className=\"c-main\">\n        <Router />\n       </main>\n      </>\n    )\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\n// Pick colors on https://material.io/resources/color/#!/\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#88ffff',\n      main: '#4dd0e1',\n      dark: '#009faf',\n      contrastText: '#000',\n    },\n    secondary: {\n      light: '#ffff81',\n      main: '#ffd54f',\n      dark: '#c8a415',\n      contrastText: '#000',\n    },\n    grey: {\n      50: \"#fafafa\",\n      100: \"#f5f5f5\",\n      200: \"#eeeeee\",\n      300: \"#e0e0e0\",\n      400: \"#bdbdbd\",\n      500: \"#9e9e9e\",\n      600: \"#757575\",\n      700: \"#616161\",\n      800: \"#424242\",\n      900: \"#212121\",\n      A100: \"#d5d5d5\",\n      A200: \"#aaaaaa\",\n      A400: \"#303030\",\n      A700: \"#616161\"\n    }\n  },\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport createStore from './reducks/store/store'\nimport { ConnectedRouter } from \"connected-react-router\";\nimport * as History from \"history\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {MuiThemeProvider} from '@material-ui/core/styles';\nimport {theme} from './assets/theme'\n\n// ヒスロリーを取得して変数へ格納\nconst history = History.createBrowserHistory();\nexport const store = createStore(history);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <MuiThemeProvider theme={theme}>\n        <App />\n        </MuiThemeProvider>\n      </ConnectedRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}